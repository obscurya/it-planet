{"version":3,"sources":["theme.js","redux/Data/data.types.js","redux/Data/data.reducer.js","redux/Grid/grid.types.js","redux/Grid/grid.reducer.js","redux/Content/content.types.js","redux/Content/content.reducer.js","redux/BlockEditor/blockEditor.types.js","redux/BlockEditor/blockEditor.reducer.js","redux/rootReducer.js","redux/Data/data.actions.js","redux/Content/content.actions.js","redux/Grid/grid.actions.js","redux/BlockEditor/blockEditor.actions.js","hooks.js","components/ContentContainer/ContentContainer.style.js","components/Grid/Grid.js","components/BlockActions/BlockActions.style.js","components/BlockActions/BlockActions.js","components/Image/Image.js","components/Text/Text.js","components/TextImageHorizontal/TextImageHorizontal.js","components/TextImageVertical/TextImageVertical.js","components/FadeInBlock/FadeInBlock.js","components/Block/Block.js","components/Content/Content.js","components/ContentContainer/ContentContainer.js","components/LeftDrawer/LeftDrawer.style.js","components/ContentSettings/ContentSettings.js","components/ScenarioEditor/ScenarioEditor.js","components/BlockEditor/BlockEditor.js","components/AdminSidebar/AdminSidebar.js","components/UsersList/UsersList.js","components/LeftDrawer/LeftDrawer.js","components/AddBlockDialog/AddBlockDialog.style.js","components/AddBlockDialog/AddBlockDialog.js","components/Scenario/Scenario.js","components/GazeMap/GazeMap.js","components/MonitoringResult/MonitoringResult.js","components/Admin/Admin.js","components/Header/Header.style.js","components/Header/Header.js","components/Scenarios/Scenarios.style.js","components/Scenarios/Scenarios.js","components/App/Test.js","components/App/App.js","index.js"],"names":["theme","createMuiTheme","palette","primary","main","FETCH_DATA","initialState","gridParams","users","userGroups","scenarios","blocks","FETCH_GRID_PARAMS","RESIZE_GRID","TOGGLE_GRID_DISPLAY","SET_FOCUS_ROW_INDEX","initialized","sizes","gutter","atom","columnsNumber","columnWidth","rowsNumber","rowHeight","minFontSize","maxWidth","focusRowIndex","SET_CONTENT_CONTAINER_SIZES","SET_SCENARIO","SET_SCENARIO_PARAM","containerWidth","window","innerWidth","containerHeight","innerHeight","scenario","SET_SELECTED_BLOCK_ID","HIGHLIGHT_BLOCK","TOGGLE_ADD_BLOCK_DIALOG","addBlockDialog","show","order","direction","selectedBlockId","highlightedBlockId","rootReducer","combineReducers","data","state","action","type","types","payload","grid","display","content","blockEditor","normalizeArray","array","normalizedArray","forEach","item","id","getScenarioById","dispatch","getState","map","blockId","setContentContainerSizes","setScenario","setScenarioBlocks","calcBlockWidth","_","resizeGrid","Math","floor","batch","newContainerWidth","setGridFocusRowIndex","index","selectBlock","toggleAddBlockDialog","setBlockParam","param","value","block","params","split","length","setScenarioBlock","usePrevious","ref","useRef","useEffect","current","useStyles","makeStyles","addButton","alignItems","lineHeight","marginLeft","spacing","marginTop","Grid","gridState","useSelector","columns","rows","i","push","key","className","classes","join","prop","document","documentElement","style","setProperty","column","row","menu","marginRight","remove","color","secondary","divider","margin","BlockActions","canMoveUp","canMoveDown","useDispatch","history","useHistory","useState","anchorEl","setAnchorEl","isMenuOpen","Boolean","handleMenuClose","addBlock","IconButton","size","onClick","e","currentTarget","MoreHoriz","Menu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","open","onClose","MenuItem","component","Link","to","Edit","maxMinBlock","Object","entries","b","ArrowUpward","minMaxBlock","ArrowDownward","Delete","Divider","VerticalAlignTop","VerticalAlignBottom","Image","backgroundImage","image","src","backgroundSize","height","top","Text","fontSizes","setFontSizes","renderParagraph","p","str","words","matchAll","parts","word","wordLength","punctuationMarks","substring","splitStringIntoWordsAndPunctuationMarks","part","partIndex","fontSizeAdjustment","querySelector","spans","querySelectorAll","newFontSizes","fontSize","span","dy","charsInLineNumber","y","getBoundingClientRect","textContent","indexOf","splice","concat","adjustFontSize","text","width","undefined","textWidth","title","pIndex","TextImageHorizontal","items","position","TextImageVertical","FadeInBlock","children","modes","enableAnimation","domRef","observer","timeout","IntersectionObserver","entry","isIntersecting","classList","add","setTimeout","observe","clearTimeout","unobserve","Block","blockEditorState","block_","selectedBlock","renderBlock","Content","autoScroll","prevBlocks","JSON","parse","stringify","prevSizes","contentRef","blocksGroups","setBlocksGroups","contentStyle","isScrollBlocked","currentRowIndex","shouldUpdate","interval","gazePosition","x","px","py","r","gazeMap","points","contentMarkup","startDate","Date","fontSizeAdjustmentsNumber","setEnableAnimation","keys","sortedFontSizes","sort","a","Set","reduce","prev","right","bottom","left","parseInt","initialTop","round","getComputedStyle","toggleContentScroll","autoScrollContent","useCallback","contentElement","time","scrollStep","scrollTimeMax","newTop","offsetHeight","transition","gazeMove","pointsLength","lastPoint","dx","sqrt","addPointToGazeMap","gridRect","newCurrentRowIndex","y1","y2","groupBlocks","groups","groupIndex","blockWidth","currentGroup","onmousemove","clientX","clientY","setInterval","onresize","clearInterval","paddingBottom","blocksGroup","blocksGroupIndex","blockIndex","opacity","el","previousSibling","childIndex","childNodes","elRect","elTextRect","abs","prevHeight","prevMarginTop","Button","variant","disableElevation","console","log","ContentContainer","location","useLocation","contentState","prevGridSizes","readingProgress","setReadingProgress","setOnresizeEvent","contentContainer","contentContainerSupport","clientHeight","min","clientWidth","progress","completed","justifyContent","pathname","Add","drawer","flexShrink","zIndex","drawerPaper","drawerHeader","fontWeight","drawerItem","padding","drawerItemTitle","marginBottom","drawerItemParam","slider","transform","sliderMarkLeft","sliderMarkRight","drawerItemParamSwitch","listItemWithButton","nestedListItem","saveButton","info","listItem","gridSizesSettings","label","max","step","createSliderMarks","accuracy","toFixed","ContentSettings","handleGridSizes","prevValue","setGridSizes","Typography","Close","Alert","severity","setting","Slider","marks","valueLabelDisplay","onChange","ScenarioEditor","TextField","fullWidth","target","BlockEditor","useParams","scenarioId","handleBlockParam","multiline","FormControl","InputLabel","Select","labelId","AdminSidebar","List","disablePadding","ListItem","button","ListItemText","Collapse","in","unmountOnExit","UsersList","dataState","setGroups","grs","0","name","userGroup","user","groupId","group","Fragment","LeftDrawer","Drawer","paper","anchor","exact","path","avatar","background","icon","Notes","VerticalSplit","HorizontalSplit","AddBlockDialog","handleClose","Dialog","DialogTitle","nanoid","ListItemAvatar","Avatar","Scenario","arr","b1","b2","GazeMap","monitoringResult","canvasRef","c","getContext","clearRect","save","translate","font","textAlign","textBaseline","fillStyle","fillRect","fillText","restore","lineWidth","strokeStyle","beginPath","point","moveTo","lineTo","stroke","closePath","arc","PI","fill","renderGazeMap","MonitoringResult","overflow","Admin","pathnameParts","pathBlockEditorIndex","exampleBlock","toolbar","grow","flexGrow","Header","AppBar","elevation","Toolbar","noWrap","edge","AccountCircle","root","Scenarios","container","justify","xs","blockGroups","Test","columnSize","cn","calcPadding","ud","lr","blockGroup","gi","bi","pi","App","store","createStore","compose","applyMiddleware","thunk","ReactDOM","render","basename","ThemeProvider","CssBaseline","getElementById"],"mappings":"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","file":"static/js/main.cc5d8dfc.chunk.js","sourcesContent":["import { createMuiTheme } from '@material-ui/core/styles';\r\n\r\nexport const theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#2196f3',\r\n    },\r\n  },\r\n});\r\n","export const FETCH_DATA = 'FETCH_DATA';\n","import * as types from './data.types';\n\nconst initialState = {\n  gridParams: null,\n  users: null,\n  userGroups: null,\n  scenarios: null,\n  blocks: null,\n};\n\nexport const dataReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.FETCH_DATA:\n      return { ...state, ...action.payload };\n    default:\n      return state;\n  }\n};\n","export const FETCH_GRID_PARAMS = 'FETCH_GRID_PARAMS';\nexport const SET_GRID_SIZES = 'SET_GRID_SIZES';\nexport const RESIZE_GRID = 'RESIZE_GRID';\nexport const TOGGLE_GRID_DISPLAY = 'TOGGLE_GRID_DISPLAY';\nexport const SET_FOCUS_ROW_INDEX = 'SET_FOCUS_ROW_INDEX';\n","import * as types from './grid.types';\r\n\r\nconst atom = 8;\r\nconst gutter = atom * 4;\r\n\r\nconst initialState = {\r\n  initialized: false,\r\n  sizes: {\r\n    gutter,\r\n    columnsNumber: 12,\r\n    columnWidth: 0,\r\n    rowsNumber: 0,\r\n    rowHeight: gutter - atom,\r\n    minFontSize: 0,\r\n    maxWidth: 1280,\r\n  },\r\n  focusRowIndex: 0,\r\n};\r\n\r\nexport const gridReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.FETCH_GRID_PARAMS:\r\n      return { ...action.payload };\r\n    case types.RESIZE_GRID:\r\n      return { ...state, sizes: { ...state.sizes, ...action.payload } };\r\n    case types.TOGGLE_GRID_DISPLAY:\r\n      return { ...state, display: { ...state.display, ...action.payload } };\r\n    case types.SET_FOCUS_ROW_INDEX:\r\n      return { ...state, focusRowIndex: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export const FETCH_CONTENT = 'FETCH_CONTENT';\nexport const SET_CONTENT_CONTAINER_SIZES = 'SET_CONTENT_CONTAINER_SIZES';\nexport const SET_SCENARIO = 'SET_SCENARIO';\nexport const SET_SCENARIO_PARAM = 'SET_SCENARIO_PARAM';\n","import * as types from './content.types';\r\n\r\nconst initialState = {\r\n  containerWidth: window.innerWidth,\r\n  containerHeight: window.innerHeight,\r\n  scenario: null,\r\n};\r\n\r\nexport const contentReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.SET_SCENARIO:\r\n      return { ...state, scenario: action.payload };\r\n    case types.SET_CONTENT_CONTAINER_SIZES:\r\n      return { ...state, ...action.payload };\r\n    case types.SET_SCENARIO_PARAM:\r\n      return { ...state, scenario: { ...state.scenario, ...action.payload } };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export const SET_SELECTED_BLOCK_ID = 'SET_SELECTED_BLOCK_ID';\nexport const HIGHLIGHT_BLOCK = 'HIGHLIGHT_BLOCK';\nexport const TOGGLE_ADD_BLOCK_DIALOG = 'TOGGLE_ADD_BLOCK_DIALOG';\n","import * as types from './blockEditor.types';\r\n\r\nconst initialState = {\r\n  addBlockDialog: {\r\n    show: false,\r\n    order: null,\r\n    direction: null,\r\n  },\r\n  selectedBlockId: null,\r\n  highlightedBlockId: null,\r\n};\r\n\r\nexport const blockEditorReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.TOGGLE_ADD_BLOCK_DIALOG:\r\n      return { ...state, addBlockDialog: action.payload };\r\n    case types.SET_SELECTED_BLOCK_ID:\r\n      return { ...state, selectedBlockId: action.payload };\r\n    case types.HIGHLIGHT_BLOCK:\r\n      return { ...state, highlightedBlockId: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport { dataReducer as data } from './Data/data.reducer';\r\nimport { gridReducer as grid } from './Grid/grid.reducer';\r\nimport { contentReducer as content } from './Content/content.reducer';\r\nimport { blockEditorReducer as blockEditor } from './BlockEditor/blockEditor.reducer';\r\n\r\nexport const rootReducer = combineReducers({\r\n  data,\r\n  grid,\r\n  content,\r\n  blockEditor,\r\n});\r\n","// import { batch } from 'react-redux';\nimport * as types from './data.types';\nimport data from '../../data.json';\n\nexport const fetchData = () => dispatch => {\n  dispatch({\n    type: types.FETCH_DATA,\n    payload: {\n      gridParams: data.gridParams,\n      users: dispatch(normalizeArray(data.users)),\n      userGroups: dispatch(normalizeArray(data.userGroups)),\n      scenarios: dispatch(normalizeArray(data.scenarios)),\n      blocks: dispatch(normalizeArray(data.blocks)),\n    },\n  });\n};\n\nexport const normalizeArray = array => () => {\n  const normalizedArray = {};\n\n  array.forEach(item => {\n    normalizedArray[item.id] = item;\n  });\n\n  return normalizedArray;\n};\n\nexport const getScenarioById = id => (dispatch, getState) => {\n  if (!id) {\n    return null;\n  }\n\n  const { data } = getState();\n  const scenario = data.scenarios[id];\n\n  return {\n    ...scenario,\n    blocks: dispatch(normalizeArray(scenario.blocks.map(blockId => data.blocks[blockId]))),\n  };\n};\n","import * as types from './content.types';\nimport { getScenarioById } from '../Data/data.actions';\n\nexport const setContentContainerSizes = (containerWidth, containerHeight) => dispatch => {\n  dispatch({\n    type: types.SET_CONTENT_CONTAINER_SIZES,\n    payload: { containerWidth, containerHeight },\n  });\n};\n\nexport const setScenario = id => (dispatch, getState) => {\n  const { data } = getState();\n\n  if (!data.scenarios) {\n    return;\n  }\n\n  dispatch({ type: types.SET_SCENARIO, payload: dispatch(getScenarioById(id)) });\n};\n\nexport const setScenarioBlock = block => (dispatch, getState) => {\n  const { content } = getState();\n\n  content.scenario.blocks[block.id] = block;\n\n  dispatch({ type: types.SET_SCENARIO, payload: content.scenario });\n};\n\nexport const setScenarioBlocks = blocks => (dispatch, getState) => {\n  const { content } = getState();\n\n  content.scenario.blocks = blocks;\n\n  dispatch({ type: types.SET_SCENARIO, payload: content.scenario });\n};\n\nexport const setScenarioParam = (param, value) => dispatch => {\n  dispatch({ type: types.SET_SCENARIO_PARAM, payload: { [param]: value } });\n};\n","import { batch } from 'react-redux';\nimport * as types from './grid.types';\nimport { setContentContainerSizes } from '../Content/content.actions';\n\nexport const fetchGridParams = () => (dispatch, getState) => {\n  const { grid, data } = getState();\n  const { focusRowIndex } = data.gridParams;\n  const gridParams = {\n    ...grid,\n    initialized: true,\n    focusRowIndex,\n    currentRowIndex: focusRowIndex,\n    sizes: { ...grid.sizes },\n  };\n\n  Object.keys(data.gridParams.sizes).forEach(key => {\n    gridParams.sizes[key] = data.gridParams.sizes[key];\n  });\n\n  dispatch({\n    type: types.FETCH_GRID_PARAMS,\n    payload: gridParams,\n  });\n};\n\nexport const setGridSizes = sizes => dispatch => {\n  batch(() => {\n    dispatch({ type: types.RESIZE_GRID, payload: sizes });\n    dispatch(resizeGrid());\n  });\n};\n\nexport const calcColumnWidth = () => (_, getState) => {\n  const { grid, content } = getState();\n  const { gutter, columnsNumber } = grid.sizes;\n\n  return Math.floor((content.containerWidth - gutter * (columnsNumber - 1)) / columnsNumber);\n};\n\nexport const calcBlockWidth = (columnsNumber, columnWidth) => (_, getState) => {\n  const { grid } = getState();\n  const { gutter } = grid.sizes;\n\n  if (!columnWidth) {\n    columnWidth = grid.sizes.columnWidth;\n  }\n\n  return columnWidth * columnsNumber + gutter * (columnsNumber - 1);\n};\n\nexport const resizeGrid = () => (dispatch, getState) => {\n  const { content, grid } = getState();\n  const { columnsNumber, rowHeight } = grid.sizes;\n  const columnWidth = dispatch(calcColumnWidth());\n  const rowsNumber = Math.floor(content.containerHeight / rowHeight);\n\n  let { focusRowIndex } = grid;\n\n  batch(() => {\n    const newContainerWidth = dispatch(calcBlockWidth(columnsNumber, columnWidth));\n\n    if (newContainerWidth !== content.containerWidth) {\n      dispatch(setContentContainerSizes(newContainerWidth, content.containerHeight));\n    }\n\n    if (focusRowIndex > rowsNumber - 1) {\n      focusRowIndex = rowsNumber - 1;\n      dispatch(setGridFocusRowIndex(focusRowIndex));\n    }\n\n    dispatch({ type: types.RESIZE_GRID, payload: { rowsNumber, columnWidth } });\n  });\n};\n\nexport const toggleGridDisplay = param => dispatch => {\n  dispatch({ type: types.TOGGLE_GRID_DISPLAY, payload: param });\n};\n\nexport const setGridFocusRowIndex = index => dispatch => {\n  batch(() => {\n    dispatch({ type: types.SET_FOCUS_ROW_INDEX, payload: index });\n    dispatch(resizeGrid());\n  });\n};\n","import { batch } from 'react-redux';\nimport { setScenarioBlock } from '../Content/content.actions';\nimport * as types from './blockEditor.types';\n\nexport const highlightBlock = id => dispatch => {\n  dispatch({ type: types.HIGHLIGHT_BLOCK, payload: id });\n};\n\nexport const selectBlock = blockId => dispatch => {\n  batch(() => {\n    dispatch({ type: types.SET_SELECTED_BLOCK_ID, payload: blockId });\n    dispatch(highlightBlock(blockId));\n  });\n};\n\nexport const toggleAddBlockDialog = (order = null, direction = null) => (dispatch, getState) => {\n  const { blockEditor } = getState();\n  dispatch({\n    type: types.TOGGLE_ADD_BLOCK_DIALOG,\n    payload: { show: !blockEditor.addBlockDialog.show, order, direction },\n  });\n};\n\nexport const setBlockParam = (param, value) => (dispatch, getState) => {\n  const { blockEditor, content } = getState();\n  const block = { ...content.scenario.blocks[blockEditor.selectedBlockId] };\n  const params = param.split('.');\n\n  if (params.length > 1) {\n    block[params[0]][params[1]] = value;\n  } else {\n    block[params[0]] = value;\n  }\n\n  dispatch(setScenarioBlock(block));\n};\n","import { useRef, useEffect } from 'react';\r\n\r\nexport const usePrevious = value => {\r\n  const ref = useRef();\r\n  useEffect(() => {\r\n    ref.current = value;\r\n  });\r\n  return ref.current;\r\n};\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport const useStyles = makeStyles(theme => ({\r\n  addButton: {\r\n    '& > span:first-child': {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      '& > span': {\r\n        lineHeight: 0,\r\n        marginLeft: theme.spacing(1),\r\n        marginTop: 2,\r\n      },\r\n    },\r\n  },\r\n}));\r\n","import React, { useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport './Grid.css';\r\n\r\nexport const Grid = ({ show }) => {\r\n  const gridState = useSelector(state => state.grid);\r\n\r\n  const columns = [];\r\n  const rows = [];\r\n\r\n  for (let i = 0; i < gridState.sizes.columnsNumber * 2 - 1; i++) {\r\n    columns.push(<div key={i} className={`grid-column ${i % 2 !== 0 ? 'gutter' : ''}`}></div>);\r\n  }\r\n\r\n  for (let i = 0; i < gridState.sizes.rowsNumber; i++) {\r\n    const classes = ['grid-row'];\r\n\r\n    if (i === gridState.focusRowIndex) {\r\n      classes.push('grid-row-focus');\r\n    }\r\n\r\n    rows.push(<div key={i} className={classes.join(' ')}></div>);\r\n  }\r\n\r\n  // set & update css variables\r\n\r\n  useEffect(() => {\r\n    const { columnsNumber, rowsNumber, columnWidth, rowHeight, gutter } = gridState.sizes;\r\n    const props = [\r\n      {\r\n        prop: '--grid-columns-number',\r\n        value: columnsNumber,\r\n      },\r\n      {\r\n        prop: '--grid-rows-number',\r\n        value: rowsNumber,\r\n      },\r\n      {\r\n        prop: '--grid-column-width',\r\n        value: `${columnWidth}px`,\r\n      },\r\n      {\r\n        prop: '--grid-row-height',\r\n        value: `${rowHeight}px`,\r\n      },\r\n      {\r\n        prop: '--grid-gutter',\r\n        value: `${gutter}px`,\r\n      },\r\n    ];\r\n\r\n    props.forEach(({ prop, value }) => {\r\n      document.documentElement.style.setProperty(prop, value);\r\n    });\r\n  });\r\n\r\n  return (\r\n    <div className={`grid ${show ? 'show-grid' : ''}`}>\r\n      <div className=\"grid-columns\">{columns.map(column => column)}</div>\r\n      <div className=\"grid-rows\">{rows.map(row => row)}</div>\r\n    </div>\r\n  );\r\n};\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport const useStyles = makeStyles(theme => ({\r\n  menu: {\r\n    '& svg': {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n  },\r\n  remove: {\r\n    color: theme.palette.secondary.main,\r\n  },\r\n  divider: {\r\n    margin: theme.spacing(1, 0),\r\n  },\r\n}));\r\n","import React, { useState } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Menu, MenuItem, IconButton, Divider } from '@material-ui/core';\nimport {\n  MoreHoriz,\n  ArrowUpward,\n  ArrowDownward,\n  VerticalAlignTop,\n  VerticalAlignBottom,\n  Edit,\n  Delete,\n} from '@material-ui/icons';\nimport { useStyles } from './BlockActions.style';\nimport { setScenarioBlocks } from '../../redux/Content/content.actions';\n\nimport './BlockActions.css';\nimport { toggleAddBlockDialog } from '../../redux/BlockEditor/blockEditor.actions';\n\nexport const BlockActions = ({ block, canMoveUp, canMoveDown }) => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const contentState = useSelector(state => state.content);\n  const { scenario } = contentState;\n  const blocks = scenario ? scenario.blocks : null;\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = useState(null);\n  const isMenuOpen = Boolean(anchorEl);\n\n  const handleMenuOpen = e => {\n    setAnchorEl(e.currentTarget);\n  };\n\n  const handleMenuClose = () => {\n    setAnchorEl(null);\n  };\n\n  const moveBlockUp = () => {\n    let maxMinBlock;\n\n    for (const [, b] of Object.entries(blocks)) {\n      if (!maxMinBlock && b.order < block.order) {\n        maxMinBlock = b;\n      }\n\n      if (maxMinBlock && b.order < block.order && b.order > maxMinBlock.order) {\n        maxMinBlock = b;\n      }\n    }\n\n    blocks[block.id].order = maxMinBlock.order;\n    blocks[maxMinBlock.id].order = block.order;\n\n    handleMenuClose();\n    dispatch(setScenarioBlocks(blocks));\n  };\n\n  const moveBlockDown = () => {\n    let minMaxBlock;\n\n    for (const [, b] of Object.entries(blocks)) {\n      if (!minMaxBlock && b.order > block.order) {\n        minMaxBlock = b;\n      }\n\n      if (minMaxBlock && b.order > block.order && b.order < minMaxBlock.order) {\n        minMaxBlock = b;\n      }\n    }\n\n    blocks[block.id].order = minMaxBlock.order;\n    blocks[minMaxBlock.id].order = block.order;\n\n    handleMenuClose();\n    dispatch(setScenarioBlocks(blocks));\n  };\n\n  const removeBlock = () => {\n    delete blocks[block.id];\n    handleMenuClose();\n    dispatch(setScenarioBlocks(blocks));\n    history.push(`/admin/scenarios/${scenario.id}`);\n  };\n\n  const addBlock = direction => {\n    handleMenuClose();\n    dispatch(toggleAddBlockDialog(block.order, direction));\n  };\n\n  return (\n    <>\n      <div className=\"content-block-actions-container\">\n        <IconButton color=\"inherit\" size=\"small\" onClick={handleMenuOpen}>\n          <MoreHoriz />\n        </IconButton>\n      </div>\n      <Menu\n        className={classes.menu}\n        anchorEl={anchorEl}\n        anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n        keepMounted\n        transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n        open={isMenuOpen}\n        onClose={handleMenuClose}\n      >\n        <MenuItem\n          component={Link}\n          to={`/admin/scenarios/${scenario.id}/block-editor/${block.id}`}\n          onClick={handleMenuClose}\n        >\n          <Edit />\n          Редактировать\n        </MenuItem>\n        {canMoveUp && (\n          <MenuItem onClick={moveBlockUp}>\n            <ArrowUpward />\n            Переместить вверх\n          </MenuItem>\n        )}\n        {canMoveDown && (\n          <MenuItem onClick={moveBlockDown}>\n            <ArrowDownward />\n            Переместить вниз\n          </MenuItem>\n        )}\n        <MenuItem className={classes.remove} onClick={removeBlock}>\n          <Delete />\n          Удалить\n        </MenuItem>\n        <Divider className={classes.divider} />\n        <MenuItem onClick={() => addBlock(-1)}>\n          <VerticalAlignTop />\n          Добавить блок сверху\n        </MenuItem>\n        <MenuItem onClick={() => addBlock(1)}>\n          <VerticalAlignBottom />\n          Добавить блок снизу\n        </MenuItem>\n      </Menu>\n    </>\n  );\n};\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport './Image.css';\r\n\r\nexport const Image = ({ block }) => {\r\n  const gridState = useSelector(state => state.grid);\r\n\r\n  return (\r\n    <div\r\n      className=\"content-block-item image\"\r\n      style={{\r\n        backgroundImage: `url(${block.image.src})`,\r\n        backgroundSize: block.image.size,\r\n        height: block.image.height ? `calc(var(--grid-row-height) * ${block.image.height})` : 'auto',\r\n        top:\r\n          block.type === 'text-image-horizontal' ? `calc(var(--grid-row-height) * ${gridState.focusRowIndex})` : 'auto',\r\n      }}\r\n    ></div>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { calcBlockWidth } from '../../redux/Grid/grid.actions';\r\nimport './Text.css';\r\n\r\nconst splitStringIntoWordsAndPunctuationMarks = str => {\r\n  const words = [...str.matchAll(/[a-zа-яё-]+/gi)];\r\n  const parts = [];\r\n\r\n  for (let i = 0; i < words.length; i++) {\r\n    const { index } = words[i];\r\n    const [word] = words[i];\r\n    const wordLength = word.length;\r\n\r\n    parts.push({\r\n      word,\r\n    });\r\n\r\n    let punctuationMarks = '';\r\n\r\n    if (words[i + 1]) {\r\n      punctuationMarks = str.substring(index + wordLength, words[i + 1].index);\r\n    } else {\r\n      punctuationMarks = str.substring(index + wordLength, str.length);\r\n    }\r\n\r\n    parts.push({\r\n      punctuationMarks,\r\n    });\r\n  }\r\n\r\n  return parts;\r\n};\r\n\r\nexport const Text = ({ block, fontSizes, setFontSizes }) => {\r\n  const dispatch = useDispatch();\r\n  const gridState = useSelector(state => state.grid);\r\n\r\n  const renderParagraph = p => {\r\n    const parts = splitStringIntoWordsAndPunctuationMarks(p);\r\n\r\n    return parts.map((part, partIndex) =>\r\n      part.word ? (\r\n        <span key={partIndex} className=\"word\">\r\n          {part.word}\r\n        </span>\r\n      ) : (\r\n        <span key={partIndex}>{part.punctuationMarks}</span>\r\n      )\r\n    );\r\n  };\r\n\r\n  // подгонка локального размера шрифта\r\n  // размер шрифта должен быть таким, чтобы в одной строке помещалось необходимое количество символов (например, 50-70)\r\n\r\n  const adjustFontSize = () => {\r\n    const fontSizeAdjustment = document.querySelector(`#font-size-adjustment-${block.id}`);\r\n\r\n    fontSizeAdjustment.style.display = 'block';\r\n\r\n    const spans = fontSizeAdjustment.querySelectorAll('p span');\r\n    const newFontSizes = [];\r\n\r\n    for (\r\n      let fontSize = gridState.sizes.minFontSize;\r\n      fontSize <= Math.floor(gridState.sizes.rowHeight * 0.61803);\r\n      fontSize++\r\n    ) {\r\n      spans.forEach(span => {\r\n        span.style.fontSize = `${fontSize}px`;\r\n      });\r\n\r\n      let dy = 0;\r\n      let charsInLineNumber = 0;\r\n\r\n      for (const span of spans) {\r\n        const { y } = span.getBoundingClientRect();\r\n\r\n        if (dy === 0) {\r\n          dy = y;\r\n          continue;\r\n        } else if (y !== dy) {\r\n          break;\r\n        }\r\n\r\n        charsInLineNumber += span.textContent.length;\r\n      }\r\n\r\n      if (charsInLineNumber >= 50 && charsInLineNumber <= 70) {\r\n        newFontSizes.push(fontSize);\r\n      }\r\n\r\n      if (charsInLineNumber < 50) {\r\n        break;\r\n      }\r\n    }\r\n\r\n    if (!newFontSizes.length) {\r\n      newFontSizes.push(gridState.sizes.minFontSize);\r\n    }\r\n\r\n    fontSizeAdjustment.style.display = 'none';\r\n\r\n    for (let i = newFontSizes.length - 1; i >= 0; i--) {\r\n      if (fontSizes.indexOf(newFontSizes[i]) !== -1) {\r\n        newFontSizes.splice(i, 1);\r\n      }\r\n    }\r\n\r\n    if (fontSizes.indexOf(999) === -1) {\r\n      setFontSizes(fontSizes => fontSizes.concat(newFontSizes));\r\n      // setFontSizes([...fontSizes, ...newFontSizes]);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    adjustFontSize();\r\n  });\r\n\r\n  return block.text ? (\r\n    <div\r\n      className=\"content-block-item text-container\"\r\n      style={{\r\n        width: block.params.textWidth !== undefined ? `${dispatch(calcBlockWidth(block.params.textWidth))}px` : 'auto',\r\n        top: `calc(var(--grid-row-height) * ${gridState.focusRowIndex - 1})`,\r\n      }}\r\n    >\r\n      <div id={`font-size-adjustment-${block.id}`} className=\"text\">\r\n        <p>{renderParagraph(block.text[0])}</p>\r\n      </div>\r\n      {block.title && <div className=\"content-block-item-title\">{block.title}</div>}\r\n      <div className=\"text\">\r\n        {block.text.map((p, pIndex) => (\r\n          <p key={pIndex}>{renderParagraph(p)}</p>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  ) : null;\r\n};\r\n\r\n// import React from 'react';\r\n// import { useSelector } from 'react-redux';\r\n// import './Text.css';\r\n\r\n// const splitStringIntoWordsAndPunctuationMarks = str => {\r\n//   const words = [...str.matchAll(/[a-zа-яё-]+/gi)];\r\n//   const parts = [];\r\n\r\n//   for (let i = 0; i < words.length; i++) {\r\n//     const { index } = words[i];\r\n//     const [word] = words[i];\r\n//     const wordLength = word.length;\r\n\r\n//     parts.push({\r\n//       word,\r\n//     });\r\n\r\n//     let punctuationMarks = '';\r\n\r\n//     if (words[i + 1]) {\r\n//       punctuationMarks = str.substring(index + wordLength, words[i + 1].index);\r\n//     } else {\r\n//       punctuationMarks = str.substring(index + wordLength, str.length);\r\n//     }\r\n\r\n//     parts.push({\r\n//       punctuationMarks,\r\n//     });\r\n//   }\r\n\r\n//   return parts;\r\n// };\r\n\r\n// const previousWordsNumber = 2;\r\n\r\n// export const Text = ({ block }) => {\r\n//   const gridState = useSelector(state => state.grid);\r\n\r\n//   const renderParagraph = (p, pIndex) => {\r\n//     const parts = splitStringIntoWordsAndPunctuationMarks(p);\r\n\r\n//     return parts.map((part, partIndex) =>\r\n//       part.word ? (\r\n//         <span\r\n//           key={partIndex}\r\n//           className=\"word\"\r\n//           id={`b${block.id}p${pIndex}w${partIndex}`}\r\n//           onMouseEnter={e => {\r\n//             let previousWordsCounter = 0;\r\n\r\n//             for (let i = partIndex - 1; i >= partIndex - 2 * previousWordsNumber - 1; i--) {\r\n//               if (i < 0) {\r\n//                 break;\r\n//               }\r\n\r\n//               const prevWord = document.querySelector(`#b${block.id}p${pIndex}w${i}`);\r\n\r\n//               if (!parts[i].word || !prevWord || !prevWord.classList.contains('is-read')) {\r\n//                 continue;\r\n//               }\r\n\r\n//               previousWordsCounter++;\r\n//             }\r\n\r\n//             if (\r\n//               !e.target.classList.contains('is-read') &&\r\n//               (partIndex <= previousWordsNumber || previousWordsCounter >= previousWordsNumber)\r\n//             ) {\r\n//               e.target.classList.add('is-read');\r\n//             }\r\n//           }}\r\n//         >\r\n//           {part.word}\r\n//         </span>\r\n//       ) : (\r\n//         <span key={partIndex}>{part.punctuationMarks}</span>\r\n//       )\r\n//     );\r\n//   };\r\n\r\n//   return block.text ? (\r\n//     <div\r\n//       className=\"content-block-item text-container\"\r\n//       style={{\r\n//         width:\r\n//           block.params.textWidth !== undefined ? `calc(var(--grid-column-width) * ${block.params.textWidth})` : 'auto',\r\n//         top: `calc(var(--grid-row-height) * ${gridState.focusRowIndex - 1})`,\r\n//       }}\r\n//     >\r\n//       {block.title && <div className=\"content-block-item-title\">{block.title}</div>}\r\n//       <div className=\"text\">\r\n//         {block.text.map((p, pIndex) => (\r\n//           <p key={pIndex}>{renderParagraph(p, pIndex)}</p>\r\n//         ))}\r\n//       </div>\r\n//     </div>\r\n//   ) : null;\r\n// };\r\n","import React from 'react';\r\nimport { Image } from '../Image/Image';\r\nimport { Text } from '../Text/Text';\r\nimport './TextImageHorizontal.css';\r\n\r\nexport const TextImageHorizontal = ({ block, fontSizes, setFontSizes }) => {\r\n  const items = [\r\n    <Text key={0} block={block} fontSizes={fontSizes} setFontSizes={setFontSizes} />,\r\n    <Image key={1} block={block} />,\r\n  ];\r\n\r\n  if (block.image.position === 'left') {\r\n    [items[0], items[1]] = [items[1], items[0]];\r\n  }\r\n\r\n  return items.map((item, index) => ({ ...item, key: index }));\r\n};\r\n","import React from 'react';\r\nimport { Image } from '../Image/Image';\r\nimport { Text } from '../Text/Text';\r\n\r\nimport './TextImageVertical.css';\r\n\r\nexport const TextImageVertical = ({ block, fontSizes, setFontSizes }) => {\r\n  return (\r\n    <>\r\n      <Image block={block} />\r\n      <Text block={block} fontSizes={fontSizes} setFontSizes={setFontSizes} />\r\n    </>\r\n  );\r\n};\r\n","import React, { useEffect, useRef } from 'react';\r\nimport './FadeInBlock.css';\r\n\r\nexport const FadeInBlock = ({ children, modes, enableAnimation }) => {\r\n  const domRef = useRef();\r\n  const observer = useRef(null);\r\n  const timeout = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (enableAnimation) {\r\n      observer.current = new IntersectionObserver(entries => {\r\n        entries.forEach(entry => {\r\n          if (entry.isIntersecting) {\r\n            domRef.current.classList.add('is-visible');\r\n          }\r\n        });\r\n      });\r\n      timeout.current = setTimeout(() => observer.current.observe(domRef.current), 1);\r\n    }\r\n  }, [enableAnimation]);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      if (observer.current && timeout.current) {\r\n        clearTimeout(timeout.current);\r\n\r\n        if (domRef.current) {\r\n          /* eslint-disable */\r\n          observer.current.unobserve(domRef.current);\r\n          /* esling-enable */\r\n        }\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"fade-in-block\" ref={domRef} style={modes.indexOf('view') === -1 ? { height: '100%' } : {}}>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { BlockActions } from '../BlockActions/BlockActions';\r\nimport { Image } from '../Image/Image';\r\nimport { Text } from '../Text/Text';\r\nimport { TextImageHorizontal } from '../TextImageHorizontal/TextImageHorizontal';\r\nimport { TextImageVertical } from '../TextImageVertical/TextImageVertical';\r\nimport { calcBlockWidth } from '../../redux/Grid/grid.actions';\r\nimport { FadeInBlock } from '../FadeInBlock/FadeInBlock';\r\n\r\nimport './Block.css';\r\n\r\nexport const Block = ({ modes, block, canMoveUp, canMoveDown, fontSizes, setFontSizes, enableAnimation }) => {\r\n  const dispatch = useDispatch();\r\n  const blockEditorState = useSelector(state => state.blockEditor);\r\n  const block_ =\r\n    blockEditorState.selectedBlock && blockEditorState.selectedBlock.id === block.id\r\n      ? blockEditorState.selectedBlock\r\n      : block;\r\n\r\n  const renderBlock = block => {\r\n    const style = {\r\n      width: block.params.width ? `${dispatch(calcBlockWidth(block.params.width))}px` : 'auto',\r\n    };\r\n\r\n    return (\r\n      <div className={`content-block content-block-type--${block.type}`} style={style}>\r\n        {(() => {\r\n          switch (block.type) {\r\n            case 'text':\r\n              return <Text block={block} fontSizes={fontSizes} setFontSizes={setFontSizes} />;\r\n            case 'image':\r\n              return <Image block={block} />;\r\n            case 'text-image-horizontal':\r\n              return <TextImageHorizontal block={block} fontSizes={fontSizes} setFontSizes={setFontSizes} />;\r\n            case 'text-image-vertical':\r\n              return <TextImageVertical block={block} fontSizes={fontSizes} setFontSizes={setFontSizes} />;\r\n            default:\r\n              return null;\r\n          }\r\n        })()}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return block_ ? (\r\n    modes.indexOf('view') === -1 ? (\r\n      <>\r\n        {modes.indexOf('edit') !== -1 && (\r\n          <BlockActions block={block_} canMoveUp={canMoveUp} canMoveDown={canMoveDown} />\r\n        )}\r\n        {renderBlock({ ...block_ })}\r\n      </>\r\n    ) : (\r\n      <FadeInBlock modes={modes} enableAnimation={enableAnimation}>\r\n        {modes.indexOf('edit') !== -1 && (\r\n          <BlockActions block={block_} canMoveUp={canMoveUp} canMoveDown={canMoveDown} />\r\n        )}\r\n        {renderBlock({ ...block_ })}\r\n      </FadeInBlock>\r\n    )\r\n  ) : null;\r\n};\r\n","import React, { useRef, useState, useEffect, useCallback } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Button } from '@material-ui/core';\r\nimport { usePrevious } from '../../hooks';\r\n\r\nimport { Block } from '../Block/Block';\r\n\r\nimport './Content.css';\r\n\r\nconst transitionFunction = 'linear';\r\nconst scrollTimeMin = 200;\r\nconst scrollTimeMax = 1500;\r\nconst initializeTime = 500;\r\nconst intervalSpeed = 1000 / 30;\r\n\r\nexport const Content = ({ modes, blocks, autoScroll }) => {\r\n  const prevBlocks = usePrevious(JSON.parse(JSON.stringify(blocks)));\r\n  const blockEditorState = useSelector(state => state.blockEditor);\r\n  const gridState = useSelector(state => state.grid);\r\n  const { sizes } = gridState;\r\n  const prevSizes = usePrevious({ ...sizes });\r\n  const contentRef = useRef(null);\r\n  const [blocksGroups, setBlocksGroups] = useState(null);\r\n  const contentStyle = useRef({ top: 0 });\r\n  const isScrollBlocked = useRef(false);\r\n  const currentRowIndex = useRef(gridState.focusRowIndex);\r\n  const shouldUpdate = useRef(0);\r\n  const interval = useRef(null);\r\n  const gazePosition = useRef({ x: 0, y: 0, px: 0, py: 0, r: 10 });\r\n  const gazeMap = useRef({\r\n    points: {},\r\n  });\r\n  const contentMarkup = useRef({});\r\n  const startDate = useRef(new Date());\r\n  const [fontSizes, setFontSizes] = useState([]);\r\n  const fontSizeAdjustmentsNumber = useRef(0);\r\n  const [enableAnimation, setEnableAnimation] = useState(false);\r\n\r\n  // подгонка общего размера шрифта и создание объекта с разметкой контента (размеры области контента и расположение слов)\r\n\r\n  useEffect(() => {\r\n    if (JSON.stringify(sizes) !== JSON.stringify(prevSizes)) {\r\n      fontSizeAdjustmentsNumber.current = 0;\r\n      setFontSizes([]);\r\n    } else if (fontSizes.length) {\r\n      if (fontSizeAdjustmentsNumber.current <= Object.keys(blocks).length) {\r\n        let sortedFontSizes = [...fontSizes].sort((a, b) => a - b);\r\n\r\n        for (let i = sortedFontSizes.length - 1; i >= 0; i--) {\r\n          if (sortedFontSizes[i] === 999) {\r\n            sortedFontSizes.splice(i, 1);\r\n          }\r\n        }\r\n\r\n        sortedFontSizes = [...new Set(sortedFontSizes)];\r\n\r\n        // let fontSize = sortedFontSizes[Math.floor(sortedFontSizes.length / 2)];\r\n        let fontSize = Math.floor(sortedFontSizes.reduce((prev, value) => prev + value, 0) / sortedFontSizes.length);\r\n\r\n        document.documentElement.style.setProperty('--font-size', `${fontSize}px`);\r\n        document.documentElement.style.setProperty('--font-size-title', `${Math.floor(fontSize * 1.61803)}px`);\r\n\r\n        fontSizeAdjustmentsNumber.current++;\r\n\r\n        if (fontSizeAdjustmentsNumber.current >= Object.keys(blocks).length) {\r\n          setFontSizes(fontSizes => fontSizes.concat(999));\r\n        }\r\n      } else if (contentRef.current && !enableAnimation) {\r\n        setTimeout(() => {\r\n          if (!contentRef.current) {\r\n            return;\r\n          }\r\n\r\n          const { right, bottom, left, width, height, x, y } = contentRef.current.getBoundingClientRect();\r\n\r\n          contentMarkup.current = {\r\n            position: {\r\n              top: parseInt(contentRef.current.style.top),\r\n              right,\r\n              bottom,\r\n              left,\r\n              width,\r\n              height,\r\n              x,\r\n              y,\r\n            },\r\n            initialTop: gridState.sizes.rowHeight * (gridState.focusRowIndex - 1),\r\n            fontSize: 0,\r\n            blocks: [],\r\n          };\r\n\r\n          document.querySelectorAll('.content-block').forEach(block => {\r\n            const { x, y, width, height } = block.getBoundingClientRect();\r\n\r\n            contentMarkup.current.blocks.push({\r\n              position: {\r\n                x: Math.round(x),\r\n                y: Math.round(y),\r\n                width: Math.round(width),\r\n                height: Math.round(height),\r\n              },\r\n              words: [...block.querySelectorAll('.word')].map(word => {\r\n                const { x, y, width, height } = word.getBoundingClientRect();\r\n\r\n                contentMarkup.current.fontSize = parseInt(window.getComputedStyle(word).fontSize);\r\n\r\n                return {\r\n                  word: word.textContent,\r\n                  position: {\r\n                    x: Math.round(x),\r\n                    y: Math.round(y),\r\n                    width: Math.round(width),\r\n                    height: Math.round(height),\r\n                  },\r\n                };\r\n              }),\r\n            });\r\n          });\r\n\r\n          setEnableAnimation(true);\r\n        }, initializeTime);\r\n      }\r\n    }\r\n  }, [\r\n    blocks,\r\n    enableAnimation,\r\n    fontSizes,\r\n    gridState.focusRowIndex,\r\n    gridState.sizes.minFontSize,\r\n    gridState.sizes.rowHeight,\r\n    prevSizes,\r\n    setFontSizes,\r\n    sizes,\r\n  ]);\r\n\r\n  const toggleContentScroll = value => {\r\n    isScrollBlocked.current = value;\r\n  };\r\n\r\n  const autoScrollContent = useCallback(() => {\r\n    const contentElement = contentRef.current;\r\n\r\n    if (\r\n      currentRowIndex.current === null ||\r\n      currentRowIndex.current === gridState.focusRowIndex ||\r\n      isScrollBlocked.current\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    const scrollTimeDifference = scrollTimeMax - scrollTimeMin;\r\n    let time;\r\n    let scrollStep;\r\n\r\n    if (currentRowIndex.current < gridState.focusRowIndex) {\r\n      time = scrollTimeMin + scrollTimeDifference * (currentRowIndex.current / (gridState.focusRowIndex - 1));\r\n      scrollStep = -gridState.sizes.rowHeight;\r\n    } else if (currentRowIndex.current > gridState.focusRowIndex) {\r\n      time = scrollTimeMax - scrollTimeDifference * (currentRowIndex.current / (gridState.sizes.rowsNumber - 1));\r\n      scrollStep = gridState.sizes.rowHeight;\r\n    }\r\n\r\n    time = Math.round(time);\r\n\r\n    // prevent infinite scroll to top\r\n\r\n    const newTop = contentStyle.current.top - scrollStep;\r\n\r\n    if (newTop > gridState.sizes.rowHeight * gridState.focusRowIndex) {\r\n      return;\r\n    }\r\n\r\n    // prevent infinite scroll to bottom\r\n\r\n    if (newTop + contentElement.offsetHeight < gridState.sizes.rowHeight * (gridState.focusRowIndex + 1)) {\r\n      return;\r\n    }\r\n\r\n    contentStyle.current = {\r\n      top: contentStyle.current.top - scrollStep,\r\n    };\r\n\r\n    contentElement.style.top = `${contentStyle.current.top}px`;\r\n    contentElement.style.transition = `${time}ms ${transitionFunction}`;\r\n\r\n    toggleContentScroll(true);\r\n\r\n    setTimeout(() => toggleContentScroll(false), time);\r\n  }, [\r\n    currentRowIndex,\r\n    gridState.focusRowIndex,\r\n    gridState.sizes.rowHeight,\r\n    gridState.sizes.rowsNumber,\r\n    isScrollBlocked,\r\n  ]);\r\n\r\n  const addPointToGazeMap = () => {\r\n    let { x, y, r } = gazePosition.current;\r\n\r\n    x = Math.round(x);\r\n    y -= Math.round(contentRef.current.getBoundingClientRect().top);\r\n\r\n    const pointsLength = Object.keys(gazeMap.current.points).length;\r\n    const lastPoint = gazeMap.current.points[Object.keys(gazeMap.current.points)[pointsLength - 1]];\r\n\r\n    if (lastPoint) {\r\n      const dx = x - lastPoint.x;\r\n      const dy = y - lastPoint.y;\r\n      const d = Math.sqrt(dx * dx + dy * dy);\r\n\r\n      if (d <= r + lastPoint.r) return;\r\n    }\r\n\r\n    gazeMap.current.points[new Date() - startDate.current] = {\r\n      x,\r\n      y,\r\n      r,\r\n    };\r\n  };\r\n\r\n  const gazeMove = useCallback(() => {\r\n    if (\r\n      !contentRef.current ||\r\n      (gazePosition.current.x === gazePosition.current.px && gazePosition.current.y === gazePosition.current.py)\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    addPointToGazeMap();\r\n\r\n    if (currentRowIndex.current === gridState.focusRowIndex && !isScrollBlocked.current) {\r\n      toggleContentScroll(true);\r\n\r\n      setTimeout(() => {\r\n        toggleContentScroll(false);\r\n      }, 1500);\r\n    }\r\n\r\n    const gridRect = document.querySelector('.grid').getBoundingClientRect();\r\n    let newCurrentRowIndex = null;\r\n\r\n    for (let i = 0; i < gridState.sizes.rowsNumber; i++) {\r\n      const y1 = i * gridState.sizes.rowHeight + gridRect.top;\r\n      const y2 = y1 + gridState.sizes.rowHeight;\r\n\r\n      if (gazePosition.current.y >= y1 && (gazePosition.current.y < y2 || i === gridState.sizes.rowsNumber - 1)) {\r\n        if (i === currentRowIndex.current) {\r\n          newCurrentRowIndex = i;\r\n          break;\r\n        }\r\n\r\n        newCurrentRowIndex = i;\r\n        break;\r\n      }\r\n    }\r\n\r\n    currentRowIndex.current = newCurrentRowIndex;\r\n\r\n    autoScrollContent();\r\n\r\n    gazePosition.current.px = gazePosition.current.x;\r\n    gazePosition.current.py = gazePosition.current.y;\r\n  }, [autoScrollContent, gridState.focusRowIndex, gridState.sizes.rowHeight, gridState.sizes.rowsNumber]);\r\n\r\n  const groupBlocks = useCallback(() => {\r\n    if (\r\n      blocks &&\r\n      gridState.sizes.rowHeight &&\r\n      (!blocksGroups || JSON.stringify(blocks) !== JSON.stringify(prevBlocks))\r\n    ) {\r\n      const groups = [];\r\n      let groupIndex = 0;\r\n\r\n      blocks.forEach((block_, index) => {\r\n        const block = { ...block_, index };\r\n\r\n        if (!groups[groupIndex]) {\r\n          groups[groupIndex] = {\r\n            width: 0,\r\n            blocks: [],\r\n          };\r\n        }\r\n\r\n        const blockWidth = block.type === 'text' ? block.params.textWidth : block.params.width;\r\n        const currentGroup = groups[groupIndex];\r\n\r\n        // if (\r\n        //   (blockWidth > gridState.sizes.columnsNumber - 2 && currentGroup.width === 0) ||\r\n        //   (currentGroup.width + blockWidth <= gridState.sizes.columnsNumber &&\r\n        //     (!currentGroup.blocks.length || block.type === currentGroup.blocks.slice(-1)[0].type))\r\n        // ) {\r\n        if (\r\n          (blockWidth > gridState.sizes.columnsNumber - 2 && currentGroup.width === 0) ||\r\n          currentGroup.width + blockWidth <= gridState.sizes.columnsNumber\r\n        ) {\r\n          groups[groupIndex].width += blockWidth;\r\n          groups[groupIndex].blocks.push(block);\r\n        } else {\r\n          groups.push({\r\n            width: blockWidth,\r\n            blocks: [block],\r\n          });\r\n          groupIndex++;\r\n        }\r\n      });\r\n\r\n      setBlocksGroups(groups);\r\n    }\r\n  }, [blocks, blocksGroups, gridState.sizes.columnsNumber, gridState.sizes.rowHeight, prevBlocks]);\r\n\r\n  useEffect(() => {\r\n    groupBlocks();\r\n\r\n    if (modes.indexOf('result') === -1 && contentRef.current && autoScroll && interval.current === null) {\r\n      window.onmousemove = e => {\r\n        gazePosition.current.x = e.clientX;\r\n        gazePosition.current.y = e.clientY;\r\n      };\r\n\r\n      interval.current = setInterval(() => {\r\n        gazeMove();\r\n      }, intervalSpeed);\r\n    }\r\n\r\n    if (shouldUpdate.current === 1) {\r\n      shouldUpdate.current++;\r\n      window.onresize();\r\n    }\r\n\r\n    contentStyle.current.top = gridState.sizes.rowHeight * (gridState.focusRowIndex - 1);\r\n  }, [autoScroll, gazeMove, gridState.focusRowIndex, gridState.sizes.rowHeight, groupBlocks, modes]);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      clearInterval(interval.current);\r\n      setBlocksGroups(null);\r\n    };\r\n  }, []);\r\n\r\n  return blocksGroups ? (\r\n    <div\r\n      ref={contentRef}\r\n      className=\"content\"\r\n      style={{\r\n        ...contentStyle.current,\r\n        paddingBottom: autoScroll ? 0 : `${gridState.sizes.rowHeight * (gridState.focusRowIndex - 1)}px`,\r\n      }}\r\n    >\r\n      {blocksGroups.map((blocksGroup, blocksGroupIndex) => (\r\n        <div key={blocksGroupIndex} className=\"content-blocks-group\">\r\n          {blocksGroup.blocks.map((block, blockIndex) => {\r\n            const style = {};\r\n\r\n            if (blocksGroup.blocks.length > 1 && blockIndex > 0) {\r\n              style.marginLeft = 'var(--grid-gutter)';\r\n            }\r\n\r\n            if (blockEditorState.highlightedBlockId && block.id !== blockEditorState.highlightedBlockId) {\r\n              style.opacity = 0.5;\r\n            }\r\n\r\n            return (\r\n              <div\r\n                key={blockIndex}\r\n                ref={el => {\r\n                  if (!autoScroll || block.type === 'image' || !el || !el.previousSibling) {\r\n                    return;\r\n                  }\r\n\r\n                  setTimeout(() => {\r\n                    const childIndex = el.previousSibling.childNodes.length > 1 ? 1 : 0;\r\n                    const elRect = el.childNodes[childIndex].getBoundingClientRect();\r\n                    const elTextRect = el.querySelector('.text-container').getBoundingClientRect();\r\n                    const height = Math.abs(elTextRect.top) - Math.abs(elRect.top);\r\n                    const prevHeight = el.previousSibling.childNodes[childIndex].offsetHeight;\r\n                    const prevMarginTop = window.getComputedStyle(el.previousSibling).marginTop;\r\n\r\n                    el.style.marginTop = `calc(${prevHeight}px - ${height}px - 3 * var(--grid-row-height) + ${prevMarginTop})`;\r\n\r\n                    if (shouldUpdate.current === 0 && prevHeight === 0) {\r\n                      shouldUpdate.current++;\r\n                    }\r\n                  }, initializeTime);\r\n                }}\r\n                className={`content-block-container ${\r\n                  block.id === blockEditorState.highlightedBlockId ? 'highlighted-block' : ''\r\n                }`}\r\n                style={style}\r\n              >\r\n                <Block\r\n                  block={block}\r\n                  canMoveUp={block.index !== 0}\r\n                  canMoveDown={block.index !== blocks.length - 1}\r\n                  modes={modes}\r\n                  fontSizes={fontSizes}\r\n                  setFontSizes={setFontSizes}\r\n                  enableAnimation={enableAnimation}\r\n                />\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      ))}\r\n      {modes.indexOf('view') !== -1 && (\r\n        <div className=\"content-blocks-group\">\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            disableElevation\r\n            onClick={() => {\r\n              console.log(JSON.stringify({ contentMarkup: contentMarkup.current, gazeMap: gazeMap.current }));\r\n            }}\r\n          >\r\n            Закончить просмотр\r\n          </Button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  ) : null;\r\n};\r\n","import React, { useState, useEffect, useCallback } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { useDispatch, useSelector, batch } from 'react-redux';\r\nimport { Button } from '@material-ui/core';\r\nimport { Add } from '@material-ui/icons';\r\n\r\nimport { usePrevious } from '../../hooks';\r\nimport { resizeGrid } from '../../redux/Grid/grid.actions';\r\nimport { toggleAddBlockDialog } from '../../redux/BlockEditor/blockEditor.actions';\r\nimport { setContentContainerSizes } from '../../redux/Content/content.actions';\r\nimport { useStyles } from './ContentContainer.style';\r\n\r\nimport { Grid } from '../Grid/Grid';\r\nimport { Content } from '../Content/Content';\r\n\r\nimport './ContentContainer.css';\r\n\r\nexport const ContentContainer = ({ autoScroll = false, blocks, modes }) => {\r\n  const classes = useStyles();\r\n  const location = useLocation();\r\n  const dispatch = useDispatch();\r\n  const contentState = useSelector(state => state.content);\r\n  const gridState = useSelector(state => state.grid);\r\n  const prevGridSizes = usePrevious({ ...gridState.sizes });\r\n\r\n  const [readingProgress, setReadingProgress] = useState(null);\r\n\r\n  const setOnresizeEvent = useCallback(() => {\r\n    if (\r\n      gridState.initialized &&\r\n      (!window.onresize || JSON.stringify(gridState.sizes) !== JSON.stringify(prevGridSizes))\r\n    ) {\r\n      window.onresize = () => {\r\n        const contentContainer = document.querySelector('.content-container');\r\n        const contentContainerSupport = document.querySelector('.content-container-support');\r\n\r\n        if (!contentContainerSupport) {\r\n          return;\r\n        }\r\n\r\n        const { clientHeight } = contentContainerSupport;\r\n        const width = Math.min(gridState.sizes.maxWidth, contentContainer.clientWidth);\r\n\r\n        batch(() => {\r\n          dispatch(setContentContainerSizes(width, clientHeight));\r\n          dispatch(resizeGrid());\r\n        });\r\n      };\r\n\r\n      window.onresize();\r\n    }\r\n  }, [dispatch, gridState.initialized, gridState.sizes, prevGridSizes]);\r\n\r\n  useEffect(() => {\r\n    if (blocks) {\r\n      if (!readingProgress) {\r\n        const progress = [];\r\n\r\n        blocks.forEach(block => {\r\n          if (!block.text) return;\r\n\r\n          block.text.forEach(() => {\r\n            progress.push({\r\n              completed: false,\r\n            });\r\n          });\r\n        });\r\n\r\n        setReadingProgress(progress);\r\n      }\r\n\r\n      setOnresizeEvent();\r\n    }\r\n  }, [blocks, readingProgress, setOnresizeEvent]);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      window.onresize = null;\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      className={`content-container ${autoScroll ? 'auto-scroll-content' : ''} ${modes.join(' ')}`}\r\n      style={{ justifyContent: blocks && blocks.length ? 'flex-start' : 'center' }}\r\n    >\r\n      {blocks && blocks.length ? (\r\n        <>\r\n          <div\r\n            className=\"content-container-support\"\r\n            style={{ width: contentState.containerWidth, maxWidth: gridState.sizes.maxWidth }}\r\n          >\r\n            {modes.indexOf('edit') !== -1 && (\r\n              <div className=\"borders\" style={{ maxWidth: contentState.containerWidth + 2 }} />\r\n            )}\r\n            <Grid show={location.pathname.split('/').indexOf('content-settings') !== -1} />\r\n            <Content modes={modes} blocks={blocks} autoScroll={autoScroll} />\r\n          </div>\r\n          {modes.indexOf('view') !== -1 && readingProgress && (\r\n            <div className=\"reading-progress-container\">\r\n              <div className=\"reading-progress\">\r\n                {readingProgress.map((item, index) => (\r\n                  <div\r\n                    key={index}\r\n                    className={`reading-progress-item ${item.completed ? 'completed' : 'not-completed'}`}\r\n                  />\r\n                ))}\r\n              </div>\r\n            </div>\r\n          )}\r\n        </>\r\n      ) : (\r\n        <Button\r\n          className={classes.addButton}\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          onClick={() => dispatch(toggleAddBlockDialog())}\r\n        >\r\n          <Add />\r\n          <span>Добавить блок</span>\r\n        </Button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst drawerWidth = 500;\r\n\r\nexport const useStyles = makeStyles(theme => ({\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n    zIndex: 9,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n    height: `calc(100% - 48px)`,\r\n    marginTop: 48,\r\n  },\r\n  drawerHeader: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    '& > *:first-child': {\r\n      width: '100%',\r\n      marginRight: theme.spacing(1),\r\n      fontWeight: 'normal',\r\n    },\r\n    '& > *:last-child': {\r\n      marginRight: theme.spacing(-2),\r\n    },\r\n  },\r\n  drawerItem: {\r\n    padding: theme.spacing(2, 4),\r\n  },\r\n  drawerItemTitle: {\r\n    fontWeight: 'normal',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  drawerItemParam: {\r\n    marginBottom: theme.spacing(2),\r\n    '&:last-child': {\r\n      marginBottom: theme.spacing(1),\r\n    },\r\n  },\r\n  slider: {\r\n    '& .MuiSlider-markLabel': {\r\n      display: 'flex',\r\n      width: 0,\r\n      justifyContent: 'center',\r\n      transform: 'none',\r\n    },\r\n  },\r\n  sliderMarkLeft: {\r\n    width: 0,\r\n  },\r\n  sliderMarkRight: {\r\n    transform: 'translateX(-47%)',\r\n  },\r\n  drawerItemParamSwitch: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    '& > *:first-child': {\r\n      width: '100%',\r\n    },\r\n    '& > *:last-child': {\r\n      marginRight: theme.spacing(-1),\r\n    },\r\n  },\r\n  listItemWithButton: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    '& > p': {\r\n      width: '100%',\r\n    },\r\n  },\r\n  nestedListItem: {\r\n    padding: theme.spacing(1, 4, 1, 6),\r\n  },\r\n  saveButton: {\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  info: {\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  listItem: {\r\n    padding: theme.spacing(1, 4),\r\n  },\r\n}));\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector, batch } from 'react-redux';\r\nimport { Slider, Typography, IconButton, Button, Divider } from '@material-ui/core';\r\nimport { Close } from '@material-ui/icons';\r\nimport { Alert } from '@material-ui/lab';\r\nimport { useStyles } from '../LeftDrawer/LeftDrawer.style';\r\n\r\nimport { setGridSizes, setGridFocusRowIndex } from '../../redux/Grid/grid.actions';\r\n\r\nconst atom = 8;\r\nconst gridSizesSettings = [\r\n  {\r\n    param: 'maxWidth',\r\n    label: 'Максимальная ширина области контента',\r\n    min: 1000,\r\n    max: 1920,\r\n    step: 10,\r\n  },\r\n  {\r\n    param: 'gutter',\r\n    label: 'Ширина межколоночного интервала и внутренних боковых отступов',\r\n    min: atom,\r\n    max: atom * atom,\r\n    step: atom,\r\n  },\r\n  {\r\n    param: 'rowHeight',\r\n    label: 'Высота строки',\r\n    min: atom * 3,\r\n    max: atom * 6,\r\n    step: atom,\r\n  },\r\n  {\r\n    param: 'minFontSize',\r\n    label: 'Минимальный размер шрифта',\r\n    min: 14,\r\n    max: 24,\r\n    step: 1,\r\n  },\r\n];\r\n\r\nconst createSliderMarks = (min, max, accuracy = 0) => {\r\n  return [\r\n    {\r\n      value: min,\r\n      label: min.toFixed(accuracy),\r\n    },\r\n    {\r\n      value: max,\r\n      label: max.toFixed(accuracy),\r\n    },\r\n  ];\r\n};\r\n\r\nexport const ContentSettings = () => {\r\n  const dispatch = useDispatch();\r\n  const gridState = useSelector(state => state.grid);\r\n  const classes = useStyles();\r\n  const { sizes } = gridState;\r\n\r\n  const handleGridSizes = (param, value, prevValue) => {\r\n    if (value === prevValue) {\r\n      return;\r\n    }\r\n\r\n    batch(() => {\r\n      dispatch(setGridSizes({ ...sizes, [param]: value }));\r\n      window.onresize();\r\n    });\r\n  };\r\n\r\n  return sizes && sizes.rowHeight ? (\r\n    <div className=\"content-settings\">\r\n      <div className={classes.drawerItem}>\r\n        <div className={classes.drawerHeader}>\r\n          <Typography variant=\"h6\">Общие настройки представления</Typography>\r\n          <IconButton component={Link} to=\"/admin\">\r\n            <Close />\r\n          </IconButton>\r\n        </div>\r\n        <Button variant=\"outlined\" color=\"primary\" size=\"small\" onClick={() => {}}>\r\n          Сохранить\r\n        </Button>\r\n      </div>\r\n      <Divider />\r\n      <div className={classes.drawerItem}>\r\n        <Typography className={classes.drawerItemTitle} variant=\"h6\">\r\n          Модульная сетка\r\n        </Typography>\r\n        <Alert className={classes.info} severity=\"info\">\r\n          Рекомендуется установить такую высоту строки, чтобы она была меньше ширины межколоночного интервала.\r\n        </Alert>\r\n        {gridSizesSettings.map(setting => (\r\n          <div key={setting.param} className={classes.drawerItemParam}>\r\n            <Typography variant=\"body1\">{setting.label}</Typography>\r\n            <Slider\r\n              color=\"primary\"\r\n              value={sizes[setting.param]}\r\n              min={setting.min}\r\n              max={setting.max}\r\n              step={setting.step}\r\n              marks={createSliderMarks(setting.min, setting.max)}\r\n              valueLabelDisplay=\"auto\"\r\n              onChange={(e, value) => handleGridSizes(setting.param, value, sizes[setting.param])}\r\n            />\r\n          </div>\r\n        ))}\r\n        <div className={classes.drawerItemParam}>\r\n          <Typography variant=\"body1\">Расположение линии фокуса</Typography>\r\n          <Slider\r\n            color=\"primary\"\r\n            value={gridState.focusRowIndex + 1}\r\n            min={2}\r\n            max={sizes.rowsNumber}\r\n            step={1}\r\n            marks={createSliderMarks(2, sizes.rowsNumber)}\r\n            valueLabelDisplay=\"auto\"\r\n            onChange={(e, value) => dispatch(setGridFocusRowIndex(value - 1))}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  ) : null;\r\n};\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Button, TextField, Typography, Divider, IconButton } from '@material-ui/core';\r\nimport { Close } from '@material-ui/icons';\r\nimport { useStyles } from '../LeftDrawer/LeftDrawer.style';\r\nimport { setScenarioParam } from '../../redux/Content/content.actions';\r\n\r\nexport const ScenarioEditor = () => {\r\n  const dispatch = useDispatch();\r\n  const contentState = useSelector(state => state.content);\r\n  const { scenario } = contentState;\r\n  const classes = useStyles();\r\n\r\n  const handleScenarioTitle = e => {\r\n    const title = e.target.value;\r\n\r\n    dispatch(setScenarioParam('title', title));\r\n  };\r\n\r\n  return scenario ? (\r\n    <div className=\"scenario-editor\">\r\n      <div className={classes.drawerItem}>\r\n        <div className={classes.drawerHeader}>\r\n          <Typography variant=\"h6\">Редактирование сценария</Typography>\r\n          <IconButton component={Link} to={`/admin`}>\r\n            <Close />\r\n          </IconButton>\r\n        </div>\r\n        <Button\r\n          className={classes.saveButton}\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          size=\"small\"\r\n          component={Link}\r\n          to={`/admin`}\r\n        >\r\n          Сохранить\r\n        </Button>\r\n      </div>\r\n      <Divider />\r\n      <div className={classes.drawerItem}>\r\n        <div className={classes.drawerItemParam}>\r\n          <div className={classes.drawerItemParam}>\r\n            <TextField\r\n              label=\"Название сценария\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              value={scenario.title}\r\n              onChange={handleScenarioTitle}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  ) : null;\r\n};\r\n","import React, { useEffect } from 'react';\r\nimport { useParams, Link, Redirect } from 'react-router-dom';\r\nimport {\r\n  Slider,\r\n  TextField,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  Typography,\r\n  Divider,\r\n  IconButton,\r\n} from '@material-ui/core';\r\nimport { Close } from '@material-ui/icons';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { selectBlock, setBlockParam } from '../../redux/BlockEditor/blockEditor.actions';\r\nimport { useStyles } from '../LeftDrawer/LeftDrawer.style';\r\n\r\nexport const BlockEditor = () => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const gridState = useSelector(state => state.grid);\r\n  const contentState = useSelector(state => state.content);\r\n  const blockEditorState = useSelector(state => state.blockEditor);\r\n  const { blockId, scenarioId } = useParams();\r\n  const { scenario } = contentState;\r\n  const block = scenario ? scenario.blocks[blockId] : null;\r\n\r\n  const handleBlockParam = (param, value, prevValue) => {\r\n    if (value === prevValue) {\r\n      return;\r\n    }\r\n\r\n    dispatch(setBlockParam(param, value));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (scenario && (!blockEditorState.selectedBlockId || blockEditorState.selectedBlockId !== blockId)) {\r\n      dispatch(selectBlock(blockId));\r\n    }\r\n  }, [block, dispatch, blockId, scenario, blockEditorState.selectedBlockId]);\r\n\r\n  if (scenario && !block) {\r\n    return <Redirect to={`/admin/scenarios/${scenario.id}`} />;\r\n  }\r\n\r\n  return gridState.sizes.rowsNumber && block ? (\r\n    <div className=\"block-editor\">\r\n      <div className={classes.drawerItem}>\r\n        <div className={classes.drawerHeader}>\r\n          <Typography variant=\"h6\">Редактирование блока</Typography>\r\n          <IconButton component={Link} to={`/admin/scenarios/${scenarioId}`}>\r\n            <Close />\r\n          </IconButton>\r\n        </div>\r\n      </div>\r\n      <Divider />\r\n      <div className={classes.drawerItem}>\r\n        <Typography className={classes.drawerItemTitle} variant=\"h6\">\r\n          Представление блока\r\n        </Typography>\r\n        <div className={classes.drawerItemParam}>\r\n          <Typography variant=\"body1\">Ширина блока</Typography>\r\n          <Slider\r\n            color=\"primary\"\r\n            value={block.params.width ? block.params.width : block.params.textWidth}\r\n            min={3}\r\n            max={gridState.sizes.columnsNumber}\r\n            step={1}\r\n            marks={[\r\n              {\r\n                value: 3,\r\n                label: '3',\r\n              },\r\n              {\r\n                value: gridState.sizes.columnsNumber,\r\n                label: `${gridState.sizes.columnsNumber}`,\r\n              },\r\n            ]}\r\n            valueLabelDisplay=\"auto\"\r\n            onChange={(e, value) =>\r\n              handleBlockParam(\r\n                block.params.width ? 'params.width' : 'params.textWidth',\r\n                value,\r\n                block.params.width ? block.params.width : block.params.textWidth\r\n              )\r\n            }\r\n          />\r\n        </div>\r\n        {block.type === 'text-image-horizontal' && (\r\n          <div className={classes.drawerItemParam}>\r\n            <Typography variant=\"body1\">Отношение ширины текста и изображения</Typography>\r\n            <Slider\r\n              className={classes.slider}\r\n              color=\"primary\"\r\n              value={block.params.textWidth}\r\n              min={0}\r\n              max={block.params.width}\r\n              step={1}\r\n              marks={[\r\n                {\r\n                  value: 0,\r\n                  label: <span className={classes.sliderMarkLeft}>Текст</span>,\r\n                },\r\n                {\r\n                  value: Math.floor((1 - 0.61803) * block.params.width),\r\n                  label: (\r\n                    <span>\r\n                      Золотое\r\n                      <br />\r\n                      сечение\r\n                    </span>\r\n                  ),\r\n                },\r\n                {\r\n                  value: Math.floor(0.61803 * block.params.width),\r\n                  label: (\r\n                    <span>\r\n                      Золотое\r\n                      <br />\r\n                      сечение\r\n                    </span>\r\n                  ),\r\n                },\r\n                {\r\n                  value: block.params.width,\r\n                  label: <span className={classes.sliderMarkRight}>Изображение</span>,\r\n                },\r\n              ]}\r\n              valueLabelDisplay=\"auto\"\r\n              onChange={(e, value) => handleBlockParam('params.textWidth', value, block.params.textWidth)}\r\n            />\r\n          </div>\r\n        )}\r\n      </div>\r\n      <Divider />\r\n      {block.type.indexOf('text') !== -1 && (\r\n        <>\r\n          <div className={classes.drawerItem}>\r\n            <Typography className={classes.drawerItemTitle} variant=\"h6\">\r\n              Текстовое наполнение\r\n            </Typography>\r\n            <div className={classes.drawerItemParam}>\r\n              <TextField\r\n                label=\"Заголовок\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                value={block.title}\r\n                onChange={e => handleBlockParam('title', e.target.value, block.title)}\r\n              />\r\n            </div>\r\n            <div className={classes.drawerItemParam}>\r\n              <TextField\r\n                label=\"Основной текст\"\r\n                multiline\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                value={block.text.join('\\n')}\r\n                onChange={e => handleBlockParam('text', e.target.value.split('\\n'), block.text)}\r\n              />\r\n            </div>\r\n          </div>\r\n          {block.type.indexOf('text-image') !== -1 && <Divider />}\r\n        </>\r\n      )}\r\n      {block.type.indexOf('image') !== -1 && (\r\n        <div className={classes.drawerItem}>\r\n          <Typography className={classes.drawerItemTitle} variant=\"h6\">\r\n            Изображение\r\n          </Typography>\r\n          <div className={classes.drawerItemParam}>\r\n            <TextField\r\n              label=\"Ссылка\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              value={block.image.src}\r\n              onChange={e => handleBlockParam('image.src', e.target.value, block.image.src)}\r\n            />\r\n          </div>\r\n          <div className={classes.drawerItemParam}>\r\n            <FormControl variant=\"outlined\" fullWidth>\r\n              <InputLabel id=\"block-image-size\">Масштаб</InputLabel>\r\n              <Select\r\n                labelId=\"block-image-size\"\r\n                label=\"Масштаб\"\r\n                value={block.image.size ? block.image.size : 'cover'}\r\n                onChange={e =>\r\n                  handleBlockParam('image.size', e.target.value, block.image.size ? block.image.size : 'cover')\r\n                }\r\n              >\r\n                <MenuItem value=\"cover\">Заполнение</MenuItem>\r\n                <MenuItem value=\"contain\">Целиком</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n          </div>\r\n          {block.type === 'text-image-horizontal' && (\r\n            <div className={classes.drawerItemParam}>\r\n              <FormControl variant=\"outlined\" fullWidth>\r\n                <InputLabel id=\"block-image-position\">Позиционирование</InputLabel>\r\n                <Select\r\n                  labelId=\"block-image-position\"\r\n                  label=\"Позиционирование\"\r\n                  value={block.image.position ? block.image.position : 'right'}\r\n                  onChange={e =>\r\n                    handleBlockParam(\r\n                      'image.position',\r\n                      e.target.value,\r\n                      block.image.position ? block.image.position : 'right'\r\n                    )\r\n                  }\r\n                >\r\n                  <MenuItem value=\"right\">Справа</MenuItem>\r\n                  <MenuItem value=\"left\">Слева</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </div>\r\n          )}\r\n          <div className={classes.drawerItemParam}>\r\n            <Typography variant=\"body1\">Высота изображения</Typography>\r\n            <Slider\r\n              className={classes.slider}\r\n              color=\"primary\"\r\n              value={block.image.height ? block.image.height : 0}\r\n              min={0}\r\n              max={gridState.sizes.rowsNumber}\r\n              step={1}\r\n              marks={[\r\n                {\r\n                  value: 0,\r\n                  label: <span className={classes.sliderMarkLeft}>Авто</span>,\r\n                },\r\n                {\r\n                  value: gridState.sizes.rowsNumber,\r\n                  label: `${gridState.sizes.rowsNumber}`,\r\n                },\r\n              ]}\r\n              valueLabelDisplay=\"auto\"\r\n              onChange={(e, value) =>\r\n                handleBlockParam('image.height', value, block.image.height ? block.image.height : 0)\r\n              }\r\n            />\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  ) : null;\r\n};\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport { List, ListItem, ListItemText, Divider, Collapse, IconButton } from '@material-ui/core';\r\nimport { Add } from '@material-ui/icons';\r\nimport { useStyles } from '../LeftDrawer/LeftDrawer.style';\r\n\r\nexport const AdminSidebar = () => {\r\n  const classes = useStyles();\r\n  const dataState = useSelector(state => state.data);\r\n  const { scenarios } = dataState;\r\n\r\n  return scenarios ? (\r\n    <List disablePadding>\r\n      <ListItem className={classes.listItem} button component={Link} to=\"/admin/content-settings\">\r\n        <ListItemText primary=\"Общие настройки представления контента\" />\r\n      </ListItem>\r\n      <Divider />\r\n      <ListItem className={classes.listItem}>\r\n        <ListItemText primary=\"Сценарии\" />\r\n        <IconButton size=\"small\">\r\n          <Add />\r\n        </IconButton>\r\n      </ListItem>\r\n      <Collapse in={true} timeout=\"auto\" unmountOnExit>\r\n        <List component=\"div\" disablePadding>\r\n          {Object.entries(scenarios).map(([, scenario]) => (\r\n            <ListItem\r\n              key={scenario.id}\r\n              className={classes.nestedListItem}\r\n              button\r\n              component={Link}\r\n              to={`/admin/scenarios/${scenario.id}`}\r\n            >\r\n              <ListItemText primary={scenario.title} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      </Collapse>\r\n      <Divider />\r\n      <ListItem className={classes.listItem} button component={Link} to=\"/admin/users\">\r\n        <ListItemText primary=\"Пользователи\" />\r\n      </ListItem>\r\n      <Divider />\r\n    </List>\r\n  ) : null;\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport { List, ListItem, ListItemText, Divider, Collapse, IconButton, Typography } from '@material-ui/core';\r\nimport { Close } from '@material-ui/icons';\r\nimport { useStyles } from '../LeftDrawer/LeftDrawer.style';\r\n\r\nexport const UsersList = () => {\r\n  const classes = useStyles();\r\n  const dataState = useSelector(state => state.data);\r\n  const { users, userGroups } = dataState;\r\n  const [groups, setGroups] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (users && userGroups && !groups) {\r\n      const grs = {\r\n        0: {\r\n          id: 0,\r\n          name: 'Без группы',\r\n          users: {},\r\n        },\r\n      };\r\n\r\n      Object.entries(userGroups).forEach(([, userGroup]) => {\r\n        grs[userGroup.id] = { ...userGroup, users: {} };\r\n      });\r\n\r\n      for (const [, user] of Object.entries(users)) {\r\n        if (!user.groupId) {\r\n          grs['0'].users[user.id] = user;\r\n          continue;\r\n        }\r\n\r\n        grs[user.groupId].users[user.id] = user;\r\n      }\r\n\r\n      setGroups(grs);\r\n    }\r\n  }, [groups, userGroups, users]);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      setGroups(null);\r\n    };\r\n  }, []);\r\n\r\n  return groups ? (\r\n    <div className=\"users\">\r\n      <div className={classes.drawerItem}>\r\n        <div className={classes.drawerHeader}>\r\n          <Typography variant=\"h6\">Пользователи</Typography>\r\n          <IconButton component={Link} to=\"/admin\">\r\n            <Close />\r\n          </IconButton>\r\n        </div>\r\n      </div>\r\n      <Divider />\r\n      <List disablePadding>\r\n        {Object.entries(groups).map(([, group]) => (\r\n          <React.Fragment key={group.id}>\r\n            <ListItem className={classes.listItem}>\r\n              <ListItemText primary={group.name} />\r\n            </ListItem>\r\n            <Collapse in={true} timeout=\"auto\" unmountOnExit>\r\n              <List component=\"div\" disablePadding>\r\n                {Object.entries(group.users).map(([, user]) => (\r\n                  <ListItem\r\n                    key={user.id}\r\n                    className={classes.nestedListItem}\r\n                    button\r\n                    component={Link}\r\n                    to={`/admin/users/${user.id}`}\r\n                  >\r\n                    <ListItemText primary={user.name} />\r\n                  </ListItem>\r\n                ))}\r\n              </List>\r\n            </Collapse>\r\n            <Divider />\r\n          </React.Fragment>\r\n        ))}\r\n      </List>\r\n    </div>\r\n  ) : null;\r\n};\r\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport { Drawer } from '@material-ui/core';\nimport { useStyles } from './LeftDrawer.style';\nimport { ContentSettings } from '../ContentSettings/ContentSettings';\nimport { ScenarioEditor } from '../ScenarioEditor/ScenarioEditor';\nimport { BlockEditor } from '../BlockEditor/BlockEditor';\nimport { AdminSidebar } from '../AdminSidebar/AdminSidebar';\nimport { UsersList } from '../UsersList/UsersList';\n\nexport const LeftDrawer = () => {\n  const classes = useStyles();\n\n  return (\n    <Drawer\n      className={classes.drawer}\n      variant=\"permanent\"\n      classes={{\n        paper: classes.drawerPaper,\n      }}\n      anchor=\"left\"\n    >\n      <Switch>\n        <Route exact path=\"/admin\">\n          <AdminSidebar />\n        </Route>\n        <Route exact path=\"/admin/content-settings\">\n          <ContentSettings />\n        </Route>\n        <Route exact path=\"/admin/scenarios/:scenarioId\">\n          <ScenarioEditor />\n        </Route>\n        <Route exact path=\"/admin/scenarios/:scenarioId/block-editor/:blockId\">\n          <BlockEditor />\n        </Route>\n        <Route exact path=\"/admin/users\">\n          <UsersList />\n        </Route>\n      </Switch>\n    </Drawer>\n  );\n};\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport const useStyles = makeStyles(theme => ({\r\n  avatar: {\r\n    background: '#64b5f6',\r\n  },\r\n}));\r\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { nanoid } from 'nanoid';\nimport { Dialog, DialogTitle, List, ListItem, ListItemAvatar, Avatar, ListItemText } from '@material-ui/core';\nimport { Notes, Image, VerticalSplit, HorizontalSplit } from '@material-ui/icons';\nimport { toggleAddBlockDialog } from '../../redux/BlockEditor/blockEditor.actions';\nimport { setScenarioBlocks } from '../../redux/Content/content.actions';\nimport { useStyles } from './AddBlockDialog.style';\n\nconst blocks = [\n  {\n    type: 'text',\n    name: 'Текст',\n    icon: <Notes />,\n  },\n  {\n    type: 'image',\n    name: 'Изображение',\n    icon: <Image />,\n  },\n  {\n    type: 'text-image-horizontal',\n    name: 'Текст и изображение на горизонтальной оси',\n    icon: <VerticalSplit />,\n  },\n  {\n    type: 'text-image-vertical',\n    name: 'Текст и изображение на вертикальной оси',\n    icon: <HorizontalSplit style={{ transform: 'rotate(180deg)' }} />,\n  },\n];\n\nexport const AddBlockDialog = () => {\n  const history = useHistory();\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const blockEditorState = useSelector(state => state.blockEditor);\n  const contentState = useSelector(state => state.content);\n  const { scenario } = contentState;\n  const gridState = useSelector(state => state.grid);\n  const { addBlockDialog } = blockEditorState;\n\n  const handleClose = () => {\n    dispatch(toggleAddBlockDialog());\n  };\n\n  const addBlock = type => {\n    const blocks = { ...scenario.blocks };\n    let order = 0;\n\n    if (addBlockDialog.order) {\n      order = addBlockDialog.order;\n\n      if (addBlockDialog.direction > 0) {\n        for (const [, block] of Object.entries(blocks)) {\n          if (block.order <= order) {\n            block.order--;\n          }\n        }\n      } else {\n        for (const [, block] of Object.entries(blocks)) {\n          if (block.order >= order) {\n            block.order++;\n          }\n        }\n      }\n    }\n\n    const block = {\n      id: nanoid(),\n      order,\n      type,\n      params: {},\n    };\n\n    if (type.indexOf('image') !== -1) {\n      block.image = {\n        src: '',\n        size: 'cover',\n      };\n\n      if (type === 'image') {\n        block.params.width = gridState.sizes.columnsNumber;\n      }\n\n      if (type === 'text-image-horizontal') {\n        block.image.height = 0;\n      } else {\n        block.image.height = Math.floor(gridState.sizes.rowsNumber / 3);\n      }\n    }\n\n    if (type.indexOf('text') !== -1) {\n      block.title = 'Заголовок информационного блока';\n      block.text = ['Абзац информационного блока'];\n\n      if (type === 'text-image-horizontal') {\n        block.params.width = gridState.sizes.columnsNumber;\n        block.params.textWidth = Math.floor(0.61803 * block.params.width);\n      } else if (type === 'text-image-vertical') {\n        block.params.width = Math.floor(gridState.sizes.columnsNumber / 3);\n      } else {\n        block.params.textWidth = gridState.sizes.columnsNumber;\n      }\n    }\n\n    blocks[block.id] = block;\n\n    handleClose();\n    dispatch(setScenarioBlocks(blocks));\n    history.push(`/admin/scenarios/${scenario.id}/block-editor/${block.id}`);\n  };\n\n  return (\n    <Dialog onClose={handleClose} open={addBlockDialog.show}>\n      <DialogTitle>Добавление блока</DialogTitle>\n      <List>\n        {blocks.map(block => (\n          <ListItem key={block.type} button onClick={() => addBlock(block.type)}>\n            <ListItemAvatar>\n              <Avatar className={classes.avatar}>{block.icon}</Avatar>\n            </ListItemAvatar>\n            <ListItemText primary={block.name} />\n          </ListItem>\n        ))}\n      </List>\n    </Dialog>\n  );\n};\n","import React, { useEffect } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { ContentContainer } from '../ContentContainer/ContentContainer';\r\nimport { AddBlockDialog } from '../AddBlockDialog/AddBlockDialog';\r\nimport { setScenario } from '../../redux/Content/content.actions';\r\n\r\nexport const Scenario = ({ modes, autoScroll }) => {\r\n  const dispatch = useDispatch();\r\n  const contentState = useSelector(state => state.content);\r\n  const dataState = useSelector(state => state.data);\r\n  const { scenario } = contentState;\r\n  const blocks = scenario ? scenario.blocks : null;\r\n  const { scenarioId } = useParams();\r\n\r\n  useEffect(() => {\r\n    if (dataState.scenarios && (!scenario || scenario.id !== scenarioId)) {\r\n      dispatch(setScenario(scenarioId));\r\n    }\r\n  }, [scenario, scenarioId, dataState.scenarios, dispatch]);\r\n\r\n  /* eslint-disable */\r\n  useEffect(() => {\r\n    return () => {\r\n      dispatch(setScenario());\r\n    };\r\n  }, []);\r\n  /* eslint-enable */\r\n\r\n  return scenario ? (\r\n    <>\r\n      <ContentContainer\r\n        autoScroll={autoScroll}\r\n        blocks={Object.keys(blocks)\r\n          .reduce((arr, blockId) => {\r\n            arr.push(blocks[blockId]);\r\n            return arr;\r\n          }, [])\r\n          .sort((b1, b2) => b1.order - b2.order)}\r\n        modes={modes}\r\n      />\r\n      {modes.indexOf('edit') !== -1 && <AddBlockDialog />}\r\n    </>\r\n  ) : null;\r\n};\r\n","import React, { useRef } from 'react';\r\nimport './GazeMap.css';\r\n\r\nexport const GazeMap = ({ monitoringResult }) => {\r\n  const canvasRef = useRef(null);\r\n  const { contentMarkup, gazeMap } = monitoringResult;\r\n  const { width, height, y, left, top } = contentMarkup.position;\r\n\r\n  const renderGazeMap = () => {\r\n    const canvas = canvasRef.current;\r\n    const c = canvas.getContext('2d');\r\n\r\n    c.clearRect(0, 0, width, height);\r\n    c.save();\r\n    c.translate(-left, -y - 100);\r\n\r\n    c.font = `${contentMarkup.fontSize}px 'Inter'`;\r\n    c.textAlign = 'left';\r\n    c.textBaseline = 'top';\r\n\r\n    contentMarkup.blocks.forEach(({ position, words }) => {\r\n      const { x, y, width, height } = position;\r\n\r\n      c.fillStyle = '#ddd';\r\n      c.fillRect(x, y, width, height);\r\n\r\n      words.forEach(({ position, word }) => {\r\n        const { x, y } = position;\r\n\r\n        // c.beginPath();\r\n        // c.arc(x, y, 1, 0, Math.PI * 2);\r\n        // c.closePath();\r\n        // c.fill();\r\n\r\n        c.fillStyle = '#000';\r\n        c.fillText(word, x, y);\r\n      });\r\n    });\r\n\r\n    c.restore();\r\n    c.save();\r\n    c.translate(-left, 0);\r\n\r\n    c.lineWidth = 2;\r\n    c.strokeStyle = 'red';\r\n\r\n    c.beginPath();\r\n\r\n    Object.entries(gazeMap.points).forEach(([i, point]) => {\r\n      const { x, y } = point;\r\n\r\n      if (i === 0) {\r\n        c.moveTo(x, y);\r\n      } else {\r\n        c.lineTo(x, y);\r\n      }\r\n    });\r\n\r\n    c.stroke();\r\n    c.closePath();\r\n\r\n    c.fillStyle = 'rgba(255, 0, 0, 0.3)';\r\n\r\n    Object.entries(gazeMap.points).forEach(([, point]) => {\r\n      const { x, y, r } = point;\r\n\r\n      c.beginPath();\r\n      c.arc(x, y, r, 0, Math.PI * 2);\r\n      c.closePath();\r\n      c.fill();\r\n    });\r\n\r\n    c.restore();\r\n  };\r\n\r\n  if (canvasRef.current) {\r\n    renderGazeMap();\r\n  }\r\n\r\n  return <canvas ref={canvasRef} width={width} height={height} style={{ maxWidth: '100%' }} />;\r\n};\r\n","import React from 'react';\r\nimport { GazeMap } from '../GazeMap/GazeMap';\r\nimport monitoringResult from './result.json';\r\n\r\nexport const MonitoringResult = () => {\r\n  return (\r\n    <div style={{ position: 'relative', width: '100%', height: '100%', overflow: 'auto' }}>\r\n      <GazeMap monitoringResult={monitoringResult} />\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect } from 'react';\r\nimport { Switch, Route, useLocation } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { selectBlock } from '../../redux/BlockEditor/blockEditor.actions';\r\nimport { ContentContainer } from '../ContentContainer/ContentContainer';\r\nimport { LeftDrawer } from '../LeftDrawer/LeftDrawer';\r\nimport { Scenario } from '../Scenario/Scenario';\r\nimport { MonitoringResult } from '../MonitoringResult/MonitoringResult';\r\n\r\nimport './Admin.css';\r\n\r\nexport const Admin = () => {\r\n  const location = useLocation();\r\n  const dispatch = useDispatch();\r\n  const blockEditorState = useSelector(state => state.blockEditor);\r\n  const gridState = useSelector(state => state.grid);\r\n\r\n  useEffect(() => {\r\n    if (blockEditorState.selectedBlockId) {\r\n      const pathnameParts = location.pathname.split('/');\r\n      const pathBlockEditorIndex = pathnameParts.indexOf('block-editor');\r\n\r\n      if (pathBlockEditorIndex === -1 || !pathnameParts[pathBlockEditorIndex + 1]) {\r\n        dispatch(selectBlock(null));\r\n      }\r\n    }\r\n  }, [blockEditorState.selectedBlockId, dispatch, location.pathname]);\r\n\r\n  const exampleBlock = {\r\n    type: 'text-image-horizontal',\r\n    title: 'Заголовок информационного блока',\r\n    text: [\r\n      'Компьютеры коренным образом изменили жизнь каждого человека. Несколько десятилетий назад люди даже не знали ничего об этих электронных устройствах, тогда как в наши дни даже маленький ребенок может управлять этой машиной. Почти все современные технологии зависит от компьютеров, которые используются для хранения данных: файлов, секретной информации, банковских операций и прочего.',\r\n      'Сегодня люди не представляют свою жизнь без современных технологий, в частности, без компьютера.',\r\n      'Но проблема в том, что вместе с положительным эффектом, компьютеры оказывают негативное влияние на человека.',\r\n    ],\r\n    image: {\r\n      height: 0,\r\n    },\r\n    params: {\r\n      width: gridState.sizes.columnsNumber,\r\n      textWidth: Math.floor(0.61803 * gridState.sizes.columnsNumber),\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div className=\"admin\">\r\n      <Switch>\r\n        <Route path=\"/admin\">\r\n          <LeftDrawer />\r\n          <Switch>\r\n            <Route exact path=\"/admin/content-settings\">\r\n              <ContentContainer blocks={[exampleBlock]} modes={['example']} />\r\n            </Route>\r\n            <Route path={['/admin/scenarios/:scenarioId', '/admin/scenarios/:scenarioId/block-editor/:blockId']}>\r\n              <Scenario modes={['edit']} />\r\n            </Route>\r\n            <Route path=\"/admin/users/:userId/monitoring-result/:resultId\">\r\n              <MonitoringResult />\r\n            </Route>\r\n          </Switch>\r\n        </Route>\r\n      </Switch>\r\n    </div>\r\n  );\r\n};\r\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport const useStyles = makeStyles(theme => ({\n  toolbar: {\n    padding: theme.spacing(0, 4),\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  button: {\n    marginLeft: theme.spacing(4),\n    padding: theme.spacing(1),\n    color: '#fff',\n    background: 'rgba(255, 255, 255, 0.2)',\n    lineHeight: 1,\n  },\n}));\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { AppBar, Toolbar, IconButton, Typography, Button, Menu, MenuItem } from '@material-ui/core';\nimport { AccountCircle } from '@material-ui/icons';\nimport { useStyles } from './Header.style';\n\nexport const Header = () => {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = useState(null);\n  const isMenuOpen = Boolean(anchorEl);\n\n  const handleMenuOpen = e => {\n    setAnchorEl(e.currentTarget);\n  };\n\n  const handleMenuClose = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <>\n      <AppBar position=\"static\" elevation={0}>\n        <Toolbar className={classes.toolbar} variant=\"dense\">\n          <Typography variant=\"body1\" noWrap>\n            Human Intelligent Reading\n          </Typography>\n          <Button className={classes.button} size=\"small\" variant=\"text\" component={Link} to=\"/scenarios\">\n            Сценарии\n          </Button>\n          <div className={classes.grow} />\n          <IconButton edge=\"end\" color=\"inherit\" onClick={handleMenuOpen}>\n            <AccountCircle />\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n      <Menu\n        anchorEl={anchorEl}\n        anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n        keepMounted\n        transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n        open={isMenuOpen}\n        onClose={handleMenuClose}\n      >\n        <MenuItem onClick={handleMenuClose}>Профиль</MenuItem>\n        <MenuItem component={Link} to=\"/admin\" onClick={handleMenuClose}>\n          Администрирование\n        </MenuItem>\n      </Menu>\n    </>\n  );\n};\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport const useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n  scenario: {\n    padding: theme.spacing(2),\n    lineHeight: 1,\n  },\n}));\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { Grid, Button } from '@material-ui/core';\nimport { useStyles } from './Scenarios.style';\n\nexport const Scenarios = () => {\n  const classes = useStyles();\n  const dataState = useSelector(state => state.data);\n  const { scenarios } = dataState;\n\n  return scenarios ? (\n    <Grid className={classes.root} container justify=\"center\" alignItems=\"center\">\n      <Grid item container xs={12} spacing={2} justify=\"center\" style={{ maxWidth: 1280 }}>\n        {Object.entries(scenarios).map(([, scenario]) => (\n          <Grid key={scenario.id} item xs={4}>\n            <Button\n              className={classes.scenario}\n              variant=\"outlined\"\n              component={Link}\n              to={`/scenarios/${scenario.id}`}\n              fullWidth\n            >\n              {scenario.title}\n            </Button>\n          </Grid>\n        ))}\n      </Grid>\n    </Grid>\n  ) : null;\n};\n","import React, { useRef } from 'react';\r\n// import './Test.css';\r\n\r\nconst blockGroups = [\r\n  {\r\n    blocks: [\r\n      {\r\n        width: 12,\r\n        background: 'rgba(255, 0, 255, 0.1)',\r\n        text: [\r\n          'Практически все из нас знают, что есть полезная и вредная еда, мы делим все продукты на плохие и хорошие, и это действительно так, потому что не все они полезны для человеческого организма, и есть много таких, которые вредны, а иногда и опасны. Ни для кого не будет открытием, что овощи и фрукты принесут организму колоссальную пользу, так как являются вкусной и полезной едой, насыщенной витаминами и массой других полезных веществ. Покушать утром особо полезно тем, что этот прием пищи заряжает энергией на целый день, и запускает процесс метаболизма в организме. Голодный человек думает не о работе, а о том, что хочет покушать.',\r\n        ],\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    blocks: [\r\n      {\r\n        width: 4,\r\n        background: 'rgba(255, 0, 0, 0.1)',\r\n        text: [\r\n          'Соблюдение определённых ограничений в рационе вовсе не означает, что вы должны исключить из ежедневного меню все ваши любимые продукты и отдать предпочтение невкусной, но полезной пище. Вкусная и полезная пища необходима для здоровья и работоспособности человека. Специалисты говорят, что ежедневная зарядка, много воды и полезной пищи сделают и из обезьяны человека. Некоторая спорная пища становится полезной, когда её употребляют несколько поколений предков.',\r\n        ],\r\n      },\r\n      {\r\n        width: 8,\r\n        background: 'rgba(0, 255, 0, 0.1)',\r\n        text: [\r\n          'Практически все из нас знают, что есть полезная и вредная еда, мы делим все продукты на плохие и хорошие, и это действительно так, потому что не все они полезны для человеческого организма, и есть много таких, которые вредны, а иногда и опасны. Ни для кого не будет открытием, что овощи и фрукты принесут организму колоссальную пользу, так как являются вкусной и полезной едой, насыщенной витаминами и массой других полезных веществ. Покушать утром особо полезно тем, что этот прием пищи заряжает энергией на целый день, и запускает процесс метаболизма в организме. Голодный человек думает не о работе, а о том, что хочет покушать.',\r\n        ],\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\nexport const Test = () => {\r\n  const maxWidth = 1280;\r\n  const atom = 8;\r\n  const gutter = atom * 4;\r\n  const lineHeight = gutter - atom;\r\n\r\n  document.documentElement.style.setProperty('--line-height', `${lineHeight}px`);\r\n\r\n  const fontSize = lineHeight - atom;\r\n\r\n  document.documentElement.style.setProperty('--font-size', `${fontSize}px`);\r\n\r\n  const columnsNumber = 12;\r\n  const columnSize = Math.floor((maxWidth - gutter * (columnsNumber - 1)) / columnsNumber);\r\n\r\n  document.documentElement.style.setProperty('--column-size', `${columnSize}px`);\r\n\r\n  const calcBlockWidth = cn => {\r\n    return cn * columnSize + gutter * (cn - 1);\r\n  };\r\n\r\n  const containerWidth = calcBlockWidth(columnsNumber);\r\n\r\n  const calcPadding = (ud, lr) => {\r\n    return `${ud * lineHeight}px ${lr * gutter}px`;\r\n  };\r\n\r\n  const columns = [];\r\n\r\n  for (let i = 0; i < columnsNumber; i++) {\r\n    columns.push(<div className=\"grid-columns-column-\" style={{ width: columnSize }}></div>);\r\n  }\r\n\r\n  const contentRef = useRef(null);\r\n  const rows = [];\r\n\r\n  if (contentRef.current) {\r\n    const rowsNumber = contentRef.current.clientHeight / lineHeight;\r\n\r\n    for (let i = 0; i < rowsNumber; i++) {\r\n      rows.push(<div className=\"grid-rows-row-\" style={{ height: lineHeight }}></div>);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div ref={contentRef} className=\"content-\" style={{ width: containerWidth, maxWidth }}>\r\n      <div className=\"grid-\">\r\n        <div className=\"grid-columns-\" style={{ width: containerWidth }}>\r\n          {columns.map((column, key) => ({ ...column, key }))}\r\n        </div>\r\n        <div className=\"grid-rows-\">{rows.map((row, key) => ({ ...row, key }))}</div>\r\n      </div>\r\n      <div className=\"blocks-\">\r\n        {blockGroups.map((blockGroup, gi) => (\r\n          <div key={gi} className=\"blocks-group-\">\r\n            {blockGroup.blocks.map((block, bi) => {\r\n              // let marginLeft = bi > 0 ? gutter : 0;\r\n              let marginLeft = 0;\r\n\r\n              return (\r\n                <div\r\n                  key={bi}\r\n                  className=\"block-\"\r\n                  style={{\r\n                    width: calcBlockWidth(block.width),\r\n                    background: block.background,\r\n                    marginLeft,\r\n                  }}\r\n                >\r\n                  <div className=\"text-\">\r\n                    {block.text.map((p, pi) => (\r\n                      <p\r\n                        key={pi}\r\n                        style={{ lineHeight: `${lineHeight}px`, padding: calcPadding(0, 1), margin: calcPadding(1, 0) }}\r\n                      >\r\n                        {p}\r\n                      </p>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// export const Test = () => {\r\n//   const maxWidth = 1280;\r\n//   const atom = 8;\r\n//   const gutter = atom * 4;\r\n//   const lineHeight = gutter - atom;\r\n\r\n//   document.documentElement.style.setProperty('--line-height', `${lineHeight}px`);\r\n\r\n//   const fontSize = lineHeight - atom;\r\n\r\n//   document.documentElement.style.setProperty('--font-size', `${fontSize}px`);\r\n\r\n//   const columnsNumber = 12;\r\n//   const columnSize = Math.floor((maxWidth - gutter * (columnsNumber + 1)) / columnsNumber);\r\n\r\n//   document.documentElement.style.setProperty('--column-size', `${columnSize}px`);\r\n\r\n//   const calcBlockWidth = cn => {\r\n//     return cn * columnSize + gutter * (cn + 1);\r\n//   };\r\n\r\n//   const containerWidth = calcBlockWidth(columnsNumber);\r\n\r\n//   const calcPadding = (ud, lr) => {\r\n//     return `${ud * lineHeight}px ${lr * gutter}px`;\r\n//   };\r\n\r\n//   const columns = [];\r\n\r\n//   for (let i = 0; i < columnsNumber; i++) {\r\n//     columns.push(<div className=\"grid-columns-column-\" style={{ width: columnSize }}></div>);\r\n//   }\r\n\r\n//   const contentRef = useRef(null);\r\n//   const rows = [];\r\n\r\n//   if (contentRef.current) {\r\n//     const rowsNumber = contentRef.current.clientHeight / lineHeight;\r\n\r\n//     for (let i = 0; i < rowsNumber; i++) {\r\n//       rows.push(<div className=\"grid-rows-row-\" style={{ height: lineHeight }}></div>);\r\n//     }\r\n//   }\r\n\r\n//   return (\r\n//     <div ref={contentRef} className=\"content-\" style={{ width: containerWidth, maxWidth }}>\r\n//       <div className=\"grid-\">\r\n//         <div className=\"grid-columns-\" style={{ width: containerWidth - gutter * 2, margin: calcPadding(0, 1) }}>\r\n//           {columns.map((column, key) => ({ ...column, key }))}\r\n//         </div>\r\n//         <div className=\"grid-rows-\">{rows.map((row, key) => ({ ...row, key }))}</div>\r\n//       </div>\r\n//       <div className=\"blocks-\">\r\n//         {blockGroups.map((blockGroup, gi) => (\r\n//           <div key={gi} className=\"blocks-group-\">\r\n//             {blockGroup.blocks.map((block, bi) => {\r\n//               let marginLeft = bi > 0 ? columnSize : 0;\r\n//               const blockWidthSum = blockGroup.blocks.reduce((prev, block) => {\r\n//                 return prev + block.width;\r\n//               }, 0);\r\n\r\n//               if (marginLeft && blockWidthSum % blockGroup.blocks.length === 0) {\r\n//                 marginLeft = gutter;\r\n//               }\r\n\r\n//               return (\r\n//                 <div\r\n//                   key={bi}\r\n//                   className=\"block-\"\r\n//                   style={{\r\n//                     width: calcBlockWidth(block.width),\r\n//                     background: block.background,\r\n//                     marginLeft,\r\n//                   }}\r\n//                 >\r\n//                   <div className=\"text-\">\r\n//                     {block.text.map((p, pi) => (\r\n//                       <p\r\n//                         key={pi}\r\n//                         style={{ lineHeight: `${lineHeight}px`, padding: calcPadding(0, 1), margin: calcPadding(1, 0) }}\r\n//                       >\r\n//                         {p}\r\n//                       </p>\r\n//                     ))}\r\n//                   </div>\r\n//                 </div>\r\n//               );\r\n//             })}\r\n//           </div>\r\n//         ))}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n","import React, { useEffect } from 'react';\r\nimport { Route, Switch } from 'react-router';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { fetchGridParams } from '../../redux/Grid/grid.actions';\r\nimport { fetchData } from '../../redux/Data/data.actions';\r\nimport { Admin } from '../Admin/Admin';\r\nimport { Scenario } from '../Scenario/Scenario';\r\nimport { Header } from '../Header/Header';\r\nimport { Scenarios } from '../Scenarios/Scenarios';\r\nimport './App.css';\r\nimport { Test } from './Test';\r\n\r\nexport const App = () => {\r\n  const dispatch = useDispatch();\r\n  const dataState = useSelector(state => state.data);\r\n  const gridState = useSelector(state => state.grid);\r\n\r\n  useEffect(() => {\r\n    if (!dataState.gridParams) {\r\n      dispatch(fetchData());\r\n    } else if (!gridState.initialized) {\r\n      dispatch(fetchGridParams());\r\n    }\r\n  });\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Header />\r\n      <Switch>\r\n        <Route path=\"/admin\">\r\n          <Admin />\r\n        </Route>\r\n        <Route exact path={['/', '/scenarios']}>\r\n          <Scenarios />\r\n        </Route>\r\n        <Route exact path=\"/scenarios/:scenarioId\">\r\n          <Scenario modes={['view']} autoScroll={true} />\r\n        </Route>\r\n        <Route exact path=\"/test\">\r\n          <Test />\r\n        </Route>\r\n      </Switch>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport { CssBaseline } from '@material-ui/core';\nimport { ThemeProvider } from '@material-ui/styles';\nimport { createStore, compose, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\n// import logger from 'redux-logger';\nimport '@fontsource/roboto/400.css';\nimport '@fontsource/roboto/500.css';\nimport 'animate.css/animate.min.css';\n\nimport { theme } from './theme';\nimport { rootReducer } from './redux/rootReducer';\n\nimport { App } from './components/App/App';\n\n// const store = createStore(rootReducer, compose(applyMiddleware(thunk, logger)));\nconst store = createStore(rootReducer, compose(applyMiddleware(thunk)));\n\nReactDOM.render(\n  <Provider store={store}>\n    <HashRouter basename=\"/\">\n      <ThemeProvider theme={theme}>\n        <CssBaseline />\n        <App />\n      </ThemeProvider>\n    </HashRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}